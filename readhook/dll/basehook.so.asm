0x1360:	lea rdi, qword ptr [rip + 0x203ca1]
0x1367:	lea rax, qword ptr [rip + 0x203ca1]
0x136e:	push rbp
0x136f:	sub rax, rdi
0x1372:	mov rbp, rsp
0x1375:	cmp rax, 0xe
0x1379:	jbe 0x1390
0x137b:	mov rax, qword ptr [rip + 0x203afe]
0x1382:	test rax, rax
0x1385:	je 0x1390
0x1387:	pop rbp
0x1388:	jmp rax
0x138a:	nop word ptr [rax + rax]
0x1390:	pop rbp
0x1391:	ret 
0x1392:	nop dword ptr [rax]
0x1396:	nop word ptr cs:[rax + rax]
0x13a0:	lea rdi, qword ptr [rip + 0x203c61]
0x13a7:	lea rsi, qword ptr [rip + 0x203c5a]
0x13ae:	push rbp
0x13af:	sub rsi, rdi
0x13b2:	mov rbp, rsp
0x13b5:	sar rsi, 3
0x13b9:	mov rax, rsi
0x13bc:	shr rax, 0x3f
0x13c0:	add rsi, rax
0x13c3:	sar rsi, 1
0x13c6:	je 0x13e0
0x13c8:	mov rax, qword ptr [rip + 0x203c01]
0x13cf:	test rax, rax
0x13d2:	je 0x13e0
0x13d4:	pop rbp
0x13d5:	jmp rax
0x13d7:	nop word ptr [rax + rax]
0x13e0:	pop rbp
0x13e1:	ret 
0x13e2:	nop dword ptr [rax]
0x13e6:	nop word ptr cs:[rax + rax]
0x13f0:	cmp byte ptr [rip + 0x203c11], 0
0x13f7:	jne 0x1420
0x13f9:	cmp qword ptr [rip + 0x203be7], 0
0x1401:	push rbp
0x1402:	mov rbp, rsp
0x1405:	je 0x1413
0x1407:	mov rdi, qword ptr [rip + 0x203bf2]
0x140e:	call 0x1348
0x1413:	call 0x1360
0x1418:	pop rbp
0x1419:	mov byte ptr [rip + 0x203be8], 1
0x1420:	ret 
0x1422:	nop dword ptr [rax]
0x1426:	nop word ptr cs:[rax + rax]
0x1430:	lea rdi, qword ptr [rip + 0x203841]
0x1437:	cmp qword ptr [rdi], 0
0x143b:	jne 0x1448
0x143d:	jmp 0x13a0
0x1442:	nop word ptr [rax + rax]
0x1448:	mov rax, qword ptr [rip + 0x203b51]
0x144f:	test rax, rax
0x1452:	je 0x143d
0x1454:	push rbp
0x1455:	mov rbp, rsp
0x1458:	call rax
0x145a:	pop rbp
0x145b:	jmp 0x13a0
0x1460:	push rbp
0x1461:	mov rbp, rsp
0x1464:	sub rsp, 0x10
0x1468:	mov rax, qword ptr fs:[0x28]
0x1471:	mov qword ptr [rbp - 8], rax
0x1475:	xor eax, eax
0x1477:	lea rsi, qword ptr [rip + 0x2653]
0x147e:	mov rdi, -1
0x1485:	call 0x1340
0x148a:	mov qword ptr [rip + 0x203b7f], rax
0x1491:	mov rax, qword ptr [rip + 0x203b78]
0x1498:	test rax, rax
0x149b:	jne 0x14cd
0x149d:	mov rax, qword ptr [rip + 0x203b54]
0x14a4:	mov rax, qword ptr [rax]
0x14a7:	mov rcx, rax
0x14aa:	mov edx, 0x33
0x14af:	mov esi, 1
0x14b4:	lea rdi, qword ptr [rip + 0x261d]
0x14bb:	call 0x1330
0x14c0:	call 0x11f0
0x14c5:	mov dword ptr [rax], 2
0x14cb:	jmp 0x14f0
0x14cd:	mov rax, qword ptr [rip + 0x203b24]
0x14d4:	mov rax, qword ptr [rax]
0x14d7:	mov rcx, rax
0x14da:	mov edx, 0x36
0x14df:	mov esi, 1
0x14e4:	lea rdi, qword ptr [rip + 0x2625]
0x14eb:	call 0x1330
0x14f0:	nop 
0x14f1:	mov rax, qword ptr [rbp - 8]
0x14f5:	xor rax, qword ptr fs:[0x28]
0x14fe:	je 0x1505
0x1500:	call 0x1230
0x1505:	leave 
0x1506:	ret 
0x1507:	push rbp
0x1508:	mov rbp, rsp
0x150b:	sub rsp, 0x40
0x150f:	mov qword ptr [rbp - 0x28], rdi
0x1513:	mov qword ptr [rbp - 0x30], rsi
0x1517:	mov qword ptr [rbp - 0x38], rdx
0x151b:	mov rax, qword ptr fs:[0x28]
0x1524:	mov qword ptr [rbp - 8], rax
0x1528:	xor eax, eax
0x152a:	mov byte ptr [rbp - 0x10], 0x45
0x152e:	mov byte ptr [rbp - 0xf], 0x2d
0x1532:	mov byte ptr [rbp - 0xe], 0x45
0x1536:	mov byte ptr [rbp - 0xd], 0x47
0x153a:	mov byte ptr [rbp - 0xc], 0x47
0x153e:	mov byte ptr [rbp - 0xb], 0x20
0x1542:	mov byte ptr [rbp - 0xa], 0x20
0x1546:	mov byte ptr [rbp - 9], 0
0x154a:	mov rax, qword ptr [rbp - 0x38]
0x154e:	lea rdx, qword ptr [rbp - 0x10]
0x1552:	mov qword ptr [rax + 0x578], rdx
0x1559:	mov rdx, qword ptr [rbp - 0x38]
0x155d:	mov rcx, qword ptr [rbp - 0x30]
0x1561:	mov rax, qword ptr [rbp - 0x28]
0x1565:	mov rsi, rcx
0x1568:	mov rdi, rax
0x156b:	call 0x1238
0x1570:	mov qword ptr [rbp - 0x18], rax
0x1574:	mov rdx, qword ptr [rbp - 0x30]
0x1578:	mov rcx, qword ptr [rbp - 0x18]
0x157c:	lea rax, qword ptr [rbp - 0x10]
0x1580:	mov rsi, rcx
0x1583:	mov rdi, rax
0x1586:	call 0x12b8
0x158b:	nop 
0x158c:	mov rax, qword ptr [rbp - 8]
0x1590:	xor rax, qword ptr fs:[0x28]
0x1599:	je 0x15a0
0x159b:	call 0x1230
0x15a0:	leave 
0x15a1:	ret 
0x15a2:	push rbp
0x15a3:	mov rbp, rsp
0x15a6:	sub rsp, 0x5d0
0x15ad:	mov dword ptr [rbp - 0x5b4], edi
0x15b3:	mov qword ptr [rbp - 0x5c0], rsi
0x15ba:	mov qword ptr [rbp - 0x5c8], rdx
0x15c1:	mov rax, qword ptr fs:[0x28]
0x15ca:	mov qword ptr [rbp - 8], rax
0x15ce:	xor eax, eax
0x15d0:	mov rax, qword ptr [rip + 0x203a39]
0x15d7:	mov rdx, qword ptr [rbp - 0x5c8]
0x15de:	mov rsi, qword ptr [rbp - 0x5c0]
0x15e5:	mov ecx, dword ptr [rbp - 0x5b4]
0x15eb:	mov edi, ecx
0x15ed:	call rax
0x15ef:	mov qword ptr [rbp - 0x5b0], rax
0x15f6:	cmp qword ptr [rbp - 0x5b0], 4
0x15fe:	jle 0x161f
0x1600:	mov rdx, qword ptr [rbp - 0x5b0]
0x1607:	mov rax, qword ptr [rbp - 0x5c0]
0x160e:	lea rsi, qword ptr [rip + 0x24ab]
0x1615:	mov rdi, rax
0x1618:	call 0x1268
0x161d:	jmp 0x1624
0x161f:	mov eax, 0
0x1624:	mov qword ptr [rbp - 0x5a8], rax
0x162b:	cmp qword ptr [rbp - 0x5a8], 0
0x1633:	je 0x16d5
0x1639:	add qword ptr [rbp - 0x5a8], 5
0x1641:	lea rax, qword ptr [rbp - 0x590]
0x1648:	mov rdi, rax
0x164b:	call 0x1270
0x1650:	mov rax, qword ptr [rbp - 0x5a8]
0x1657:	mov edx, 8
0x165c:	mov rsi, rax
0x165f:	lea rdi, qword ptr [rip + 0x2462]
0x1666:	call 0x1200
0x166b:	test eax, eax
0x166d:	jne 0x16d5
0x166f:	mov rax, qword ptr [rbp - 0x5a8]
0x1676:	add rax, 8
0x167a:	mov qword ptr [rbp - 0x5a0], rax
0x1681:	mov rax, qword ptr [rbp - 0x5a0]
0x1688:	mov rdi, rax
0x168b:	call 0x12c0
0x1690:	mov rsi, rax
0x1693:	mov rdx, qword ptr [rbp - 0x5a8]
0x169a:	mov rax, qword ptr [rbp - 0x5a0]
0x16a1:	mov ecx, 0xffff
0x16a6:	mov rdi, rax
0x16a9:	call 0x1210
0x16ae:	mov qword ptr [rbp - 0x598], rax
0x16b5:	lea rdx, qword ptr [rbp - 0x590]
0x16bc:	mov rcx, qword ptr [rbp - 0x598]
0x16c3:	mov rax, qword ptr [rbp - 0x5a8]
0x16ca:	mov rsi, rcx
0x16cd:	mov rdi, rax
0x16d0:	call 0x1507
0x16d5:	mov rax, qword ptr [rbp - 0x5b0]
0x16dc:	mov rcx, qword ptr [rbp - 8]
0x16e0:	xor rcx, qword ptr fs:[0x28]
0x16e9:	je 0x16f0
0x16eb:	call 0x1230
0x16f0:	leave 
0x16f1:	ret 
0x16f2:	push rbp
0x16f3:	mov rbp, rsp
0x16f6:	sub rsp, 0x10
0x16fa:	mov rax, qword ptr fs:[0x28]
0x1703:	mov qword ptr [rbp - 8], rax
0x1707:	xor eax, eax
0x1709:	nop 
0x170a:	pop rdi
0x170b:	ret 
0x170c:	nop 
0x170d:	pop rsi
0x170e:	ret 
0x170f:	nop 
0x1710:	pop rdx
0x1711:	ret 
0x1712:	nop 
0x1713:	nop 
0x1714:	ret 
0x1715:	nop 
0x1716:	mov rax, qword ptr [rbp - 8]
0x171a:	xor rax, qword ptr fs:[0x28]
0x1723:	je 0x172a
0x1725:	call 0x1230
0x172a:	leave 
0x172b:	ret 
0x172c:	push rbp
0x172d:	mov rbp, rsp
0x1730:	sub rsp, 0x20
0x1734:	mov qword ptr [rbp - 0x18], rdi
0x1738:	mov rax, qword ptr fs:[0x28]
0x1741:	mov qword ptr [rbp - 8], rax
0x1745:	xor eax, eax
0x1747:	call 0x1328
0x174c:	neg eax
0x174e:	movsxd rdx, eax
0x1751:	mov rax, qword ptr [rbp - 0x18]
0x1755:	and rax, rdx
0x1758:	mov rcx, qword ptr [rbp - 8]
0x175c:	xor rcx, qword ptr fs:[0x28]
0x1765:	je 0x176c
0x1767:	call 0x1230
0x176c:	leave 
0x176d:	ret 
0x176e:	push rbp
0x176f:	mov rbp, rsp
0x1772:	sub rsp, 0x20
0x1776:	mov qword ptr [rbp - 0x18], rdi
0x177a:	mov rax, qword ptr fs:[0x28]
0x1783:	mov qword ptr [rbp - 8], rax
0x1787:	xor eax, eax
0x1789:	mov rax, qword ptr [rbp - 0x18]
0x178d:	mov rdi, rax
0x1790:	call 0x1308
0x1795:	mov rax, qword ptr [rbp - 0x18]
0x1799:	mov rdi, rax
0x179c:	call 0x1320
0x17a1:	mov dword ptr [rbp - 0xc], 1
0x17a8:	jmp 0x1807
0x17aa:	mov rdx, qword ptr [rbp - 0x18]
0x17ae:	mov eax, dword ptr [rbp - 0xc]
0x17b1:	imul rax, rax, 0x118
0x17b8:	add rax, rdx
0x17bb:	add rax, 8
0x17bf:	mov rax, qword ptr [rax]
0x17c2:	test rax, rax
0x17c5:	je 0x17e4
0x17c7:	mov rdx, qword ptr [rbp - 0x18]
0x17cb:	mov eax, dword ptr [rbp - 0xc]
0x17ce:	imul rax, rax, 0x118
0x17d5:	add rax, rdx
0x17d8:	add rax, 0x10
0x17dc:	mov rax, qword ptr [rax]
0x17df:	test rax, rax
0x17e2:	jne 0x1803
0x17e4:	lea rcx, qword ptr [rip + 0x24e5]
0x17eb:	mov edx, 0x15
0x17f0:	lea rsi, qword ptr [rip + 0x2359]
0x17f7:	lea rdi, qword ptr [rip + 0x2362]
0x17fe:	call 0x1250
0x1803:	add dword ptr [rbp - 0xc], 1
0x1807:	cmp dword ptr [rbp - 0xc], 4
0x180b:	jbe 0x17aa
0x180d:	mov rax, qword ptr [rbp - 0x18]
0x1811:	mov rax, qword ptr [rax + 0x238]
0x1818:	mov rdx, qword ptr [rip + 0x203669]
0x181f:	cmp rax, rdx
0x1822:	jb 0x1843
0x1824:	lea rcx, qword ptr [rip + 0x24a5]
0x182b:	mov edx, 0x18
0x1830:	lea rsi, qword ptr [rip + 0x2319]
0x1837:	lea rdi, qword ptr [rip + 0x236a]
0x183e:	call 0x1250
0x1843:	mov rax, qword ptr [rbp - 0x18]
0x1847:	mov rax, qword ptr [rax + 0x240]
0x184e:	mov rdx, qword ptr [rip + 0x203633]
0x1855:	cmp rax, rdx
0x1858:	ja 0x1879
0x185a:	lea rcx, qword ptr [rip + 0x246f]
0x1861:	mov edx, 0x19
0x1866:	lea rsi, qword ptr [rip + 0x22e3]
0x186d:	lea rdi, qword ptr [rip + 0x2364]
0x1874:	call 0x1250
0x1879:	mov rax, qword ptr [rbp - 0x18]
0x187d:	mov rax, qword ptr [rax + 0x350]
0x1884:	mov rdx, qword ptr [rip + 0x203755]
0x188b:	cmp rax, rdx
0x188e:	jb 0x18af
0x1890:	lea rcx, qword ptr [rip + 0x2439]
0x1897:	mov edx, 0x1c
0x189c:	lea rsi, qword ptr [rip + 0x22ad]
0x18a3:	lea rdi, qword ptr [rip + 0x235e]
0x18aa:	call 0x1250
0x18af:	mov rax, qword ptr [rbp - 0x18]
0x18b3:	mov rax, qword ptr [rax + 0x358]
0x18ba:	mov rdx, qword ptr [rip + 0x20371f]
0x18c1:	cmp rax, rdx
0x18c4:	ja 0x18e5
0x18c6:	lea rcx, qword ptr [rip + 0x2403]
0x18cd:	mov edx, 0x1d
0x18d2:	lea rsi, qword ptr [rip + 0x2277]
0x18d9:	lea rdi, qword ptr [rip + 0x2368]
0x18e0:	call 0x1250
0x18e5:	mov rax, qword ptr [rbp - 0x18]
0x18e9:	mov qword ptr [rax + 0x578], 0
0x18f4:	lea rax, qword ptr [rbp - 0x10]
0x18f8:	mov rdi, rax
0x18fb:	call 0x172c
0x1900:	mov rdx, rax
0x1903:	mov rax, qword ptr [rbp - 0x18]
0x1907:	mov qword ptr [rax + 0x580], rdx
0x190e:	nop 
0x190f:	mov rax, qword ptr [rbp - 8]
0x1913:	xor rax, qword ptr fs:[0x28]
0x191c:	je 0x1923
0x191e:	call 0x1230
0x1923:	leave 
0x1924:	ret 
0x1925:	push rbp
0x1926:	mov rbp, rsp
0x1929:	sub rsp, 0x20
0x192d:	mov eax, edi
0x192f:	mov qword ptr [rbp - 0x20], rsi
0x1933:	mov byte ptr [rbp - 0x14], al
0x1936:	mov rax, qword ptr fs:[0x28]
0x193f:	mov qword ptr [rbp - 8], rax
0x1943:	xor eax, eax
0x1945:	movsx eax, byte ptr [rbp - 0x14]
0x1949:	sub eax, 0x41
0x194c:	cmp eax, 0x12
0x194f:	ja 0x19af
0x1951:	mov eax, eax
0x1953:	lea rdx, qword ptr [rax*4]
0x195b:	lea rax, qword ptr [rip + 0x2322]
0x1962:	mov eax, dword ptr [rdx + rax]
0x1965:	movsxd rdx, eax
0x1968:	lea rax, qword ptr [rip + 0x2315]
0x196f:	add rax, rdx
0x1972:	jmp rax
0x1974:	mov eax, 0
0x1979:	jmp 0x19b4
0x197b:	mov rax, qword ptr [rbp - 0x20]
0x197f:	mov rax, qword ptr [rax + 0x578]
0x1986:	jmp 0x19b4
0x1988:	mov rax, qword ptr [rbp - 0x20]
0x198c:	mov rax, qword ptr [rax + 0x238]
0x1993:	jmp 0x19b4
0x1995:	mov rax, qword ptr [rbp - 0x20]
0x1999:	mov rax, qword ptr [rax + 0x350]
0x19a0:	jmp 0x19b4
0x19a2:	mov rax, qword ptr [rbp - 0x20]
0x19a6:	mov rax, qword ptr [rax + 0x580]
0x19ad:	jmp 0x19b4
0x19af:	mov eax, 0
0x19b4:	mov rcx, qword ptr [rbp - 8]
0x19b8:	xor rcx, qword ptr fs:[0x28]
0x19c1:	je 0x19c8
0x19c3:	call 0x1230
0x19c8:	leave 
0x19c9:	ret 
0x19ca:	push rbp
0x19cb:	mov rbp, rsp
0x19ce:	push r12
0x19d0:	push rbx
0x19d1:	sub rsp, 0x30
0x19d5:	mov qword ptr [rbp - 0x28], rdi
0x19d9:	mov eax, esi
0x19db:	mov qword ptr [rbp - 0x38], rdx
0x19df:	mov byte ptr [rbp - 0x2c], al
0x19e2:	mov rax, qword ptr fs:[0x28]
0x19eb:	mov qword ptr [rbp - 0x18], rax
0x19ef:	xor eax, eax
0x19f1:	mov r12, qword ptr [rbp - 0x28]
0x19f5:	movsx eax, byte ptr [rbp - 0x2c]
0x19f9:	mov rdx, qword ptr [rbp - 0x38]
0x19fd:	mov rsi, rdx
0x1a00:	mov edi, eax
0x1a02:	call 0x1260
0x1a07:	sub r12, rax
0x1a0a:	mov rax, r12
0x1a0d:	shl rax, 0x10
0x1a11:	sar rax, 0x10
0x1a15:	movabs rdx, 0xffffffffffff
0x1a1f:	and rdx, rax
0x1a22:	movabs rax, 0xffff000000000000
0x1a2c:	and rax, rbx
0x1a2f:	or rax, rdx
0x1a32:	mov rbx, rax
0x1a35:	movzx eax, byte ptr [rbp - 0x2c]
0x1a39:	shl rax, 0x30
0x1a3d:	mov rdx, rax
0x1a40:	movabs rax, 0xff00ffffffffffff
0x1a4a:	and rax, rbx
0x1a4d:	or rax, rdx
0x1a50:	mov rbx, rax
0x1a53:	movabs rax, 0xffffffffffffff
0x1a5d:	and rbx, rax
0x1a60:	mov rdx, rbx
0x1a63:	movabs rax, 0x7e00000000000000
0x1a6d:	or rax, rdx
0x1a70:	mov rbx, rax
0x1a73:	mov rax, rbx
0x1a76:	mov rcx, qword ptr [rbp - 0x18]
0x1a7a:	xor rcx, qword ptr fs:[0x28]
0x1a83:	je 0x1a8a
0x1a85:	call 0x1230
0x1a8a:	add rsp, 0x30
0x1a8e:	pop rbx
0x1a8f:	pop r12
0x1a91:	pop rbp
0x1a92:	ret 
0x1a93:	push rbp
0x1a94:	mov rbp, rsp
0x1a97:	push r12
0x1a99:	push rbx
0x1a9a:	sub rsp, 0x30
0x1a9e:	mov qword ptr [rbp - 0x28], rdi
0x1aa2:	mov eax, esi
0x1aa4:	mov qword ptr [rbp - 0x38], rdx
0x1aa8:	mov byte ptr [rbp - 0x2c], al
0x1aab:	mov rax, qword ptr fs:[0x28]
0x1ab4:	mov qword ptr [rbp - 0x18], rax
0x1ab8:	xor eax, eax
0x1aba:	mov r12, qword ptr [rbp - 0x28]
0x1abe:	movsx eax, byte ptr [rbp - 0x2c]
0x1ac2:	mov rdx, qword ptr [rbp - 0x38]
0x1ac6:	mov rsi, rdx
0x1ac9:	mov edi, eax
0x1acb:	call 0x1260
0x1ad0:	sub r12, rax
0x1ad3:	mov rax, r12
0x1ad6:	shl rax, 0x10
0x1ada:	sar rax, 0x10
0x1ade:	movabs rdx, 0xffffffffffff
0x1ae8:	and rdx, rax
0x1aeb:	movabs rax, 0xffff000000000000
0x1af5:	and rax, rbx
0x1af8:	or rax, rdx
0x1afb:	mov rbx, rax
0x1afe:	movzx eax, byte ptr [rbp - 0x2c]
0x1b02:	shl rax, 0x30
0x1b06:	mov rdx, rax
0x1b09:	movabs rax, 0xff00ffffffffffff
0x1b13:	and rax, rbx
0x1b16:	or rax, rdx
0x1b19:	mov rbx, rax
0x1b1c:	movabs rax, 0xffffffffffffff
0x1b26:	and rbx, rax
0x1b29:	mov rdx, rbx
0x1b2c:	movabs rax, 0x2a00000000000000
0x1b36:	or rax, rdx
0x1b39:	mov rbx, rax
0x1b3c:	mov rax, rbx
0x1b3f:	mov rcx, qword ptr [rbp - 0x18]
0x1b43:	xor rcx, qword ptr fs:[0x28]
0x1b4c:	je 0x1b53
0x1b4e:	call 0x1230
0x1b53:	add rsp, 0x30
0x1b57:	pop rbx
0x1b58:	pop r12
0x1b5a:	pop rbp
0x1b5b:	ret 
0x1b5c:	push rbp
0x1b5d:	mov rbp, rsp
0x1b60:	sub rsp, 0x20
0x1b64:	mov qword ptr [rbp - 0x20], rdi
0x1b68:	mov qword ptr [rbp - 0x18], rsi
0x1b6c:	mov rax, qword ptr fs:[0x28]
0x1b75:	mov qword ptr [rbp - 8], rax
0x1b79:	xor eax, eax
0x1b7b:	movzx eax, byte ptr [rbp - 0x1a]
0x1b7f:	movsx eax, al
0x1b82:	mov rdx, qword ptr [rbp - 0x18]
0x1b86:	mov rsi, rdx
0x1b89:	mov edi, eax
0x1b8b:	call 0x1260
0x1b90:	mov rdx, rax
0x1b93:	mov rax, qword ptr [rbp - 0x20]
0x1b97:	shl rax, 0x10
0x1b9b:	sar rax, 0x10
0x1b9f:	add rax, rdx
0x1ba2:	mov rcx, qword ptr [rbp - 8]
0x1ba6:	xor rcx, qword ptr fs:[0x28]
0x1baf:	je 0x1bb6
0x1bb1:	call 0x1230
0x1bb6:	leave 
0x1bb7:	ret 
0x1bb8:	push rbp
0x1bb9:	mov rbp, rsp
0x1bbc:	sub rsp, 0x20
0x1bc0:	mov qword ptr [rbp - 0x20], rdi
0x1bc4:	mov qword ptr [rbp - 0x18], rsi
0x1bc8:	mov rax, qword ptr fs:[0x28]
0x1bd1:	mov qword ptr [rbp - 8], rax
0x1bd5:	xor eax, eax
0x1bd7:	mov rdx, qword ptr [rbp - 0x18]
0x1bdb:	mov rax, qword ptr [rbp - 0x20]
0x1bdf:	mov rsi, rdx
0x1be2:	mov rdi, rax
0x1be5:	call 0x1b5c
0x1bea:	mov rax, qword ptr [rax]
0x1bed:	mov rcx, qword ptr [rbp - 8]
0x1bf1:	xor rcx, qword ptr fs:[0x28]
0x1bfa:	je 0x1c01
0x1bfc:	call 0x1230
0x1c01:	leave 
0x1c02:	ret 
0x1c03:	push rbp
0x1c04:	mov rbp, rsp
0x1c07:	sub rsp, 0x20
0x1c0b:	mov qword ptr [rbp - 0x20], rdi
0x1c0f:	mov qword ptr [rbp - 0x18], rsi
0x1c13:	mov rax, qword ptr fs:[0x28]
0x1c1c:	mov qword ptr [rbp - 8], rax
0x1c20:	xor eax, eax
0x1c22:	movzx eax, byte ptr [rbp - 0x19]
0x1c26:	cmp al, 0x7e
0x1c28:	jne 0x1c3f
0x1c2a:	mov rdx, qword ptr [rbp - 0x18]
0x1c2e:	mov rax, qword ptr [rbp - 0x20]
0x1c32:	mov rsi, rdx
0x1c35:	mov rdi, rax
0x1c38:	call 0x1b5c
0x1c3d:	jmp 0x1c60
0x1c3f:	movzx eax, byte ptr [rbp - 0x19]
0x1c43:	cmp al, 0x2a
0x1c45:	jne 0x1c5c
0x1c47:	mov rdx, qword ptr [rbp - 0x18]
0x1c4b:	mov rax, qword ptr [rbp - 0x20]
0x1c4f:	mov rsi, rdx
0x1c52:	mov rdi, rax
0x1c55:	call 0x1bb8
0x1c5a:	jmp 0x1c60
0x1c5c:	mov rax, qword ptr [rbp - 0x20]
0x1c60:	mov rcx, qword ptr [rbp - 8]
0x1c64:	xor rcx, qword ptr fs:[0x28]
0x1c6d:	je 0x1c74
0x1c6f:	call 0x1230
0x1c74:	leave 
0x1c75:	ret 
0x1c76:	push rbp
0x1c77:	mov rbp, rsp
0x1c7a:	sub rsp, 0x60
0x1c7e:	mov qword ptr [rbp - 0x48], rdi
0x1c82:	mov qword ptr [rbp - 0x50], rsi
0x1c86:	mov qword ptr [rbp - 0x58], rdx
0x1c8a:	mov qword ptr [rbp - 0x60], rcx
0x1c8e:	mov rax, qword ptr fs:[0x28]
0x1c97:	mov qword ptr [rbp - 8], rax
0x1c9b:	xor eax, eax
0x1c9d:	mov rax, qword ptr [rbp - 0x50]
0x1ca1:	add rax, 2
0x1ca5:	movabs rdx, 0xaaaaaaaaaaaaaaab
0x1caf:	mul rdx
0x1cb2:	mov rax, rdx
0x1cb5:	shr rax, 1
0x1cb8:	shl rax, 2
0x1cbc:	mov qword ptr [rbp - 0x40], rax
0x1cc0:	mov rax, qword ptr [rbp - 0x40]
0x1cc4:	cmp rax, qword ptr [rbp - 0x60]
0x1cc8:	jbe 0x1cd2
0x1cca:	mov rax, qword ptr [rbp - 0x60]
0x1cce:	mov qword ptr [rbp - 0x40], rax
0x1cd2:	mov qword ptr [rbp - 0x38], 0
0x1cda:	mov qword ptr [rbp - 0x30], 0
0x1ce2:	mov qword ptr [rbp - 0x28], 0
0x1cea:	jmp 0x1d9c
0x1cef:	mov qword ptr [rbp - 0x20], 0
0x1cf7:	jmp 0x1d3a
0x1cf9:	mov rax, qword ptr [rbp - 0x28]
0x1cfd:	shl rax, 8
0x1d01:	mov rcx, rax
0x1d04:	mov rax, qword ptr [rbp - 0x38]
0x1d08:	cmp rax, qword ptr [rbp - 0x50]
0x1d0c:	jae 0x1d29
0x1d0e:	mov rax, qword ptr [rbp - 0x38]
0x1d12:	lea rdx, qword ptr [rax + 1]
0x1d16:	mov qword ptr [rbp - 0x38], rdx
0x1d1a:	mov rdx, qword ptr [rbp - 0x48]
0x1d1e:	add rax, rdx
0x1d21:	movzx eax, byte ptr [rax]
0x1d24:	movzx eax, al
0x1d27:	jmp 0x1d2e
0x1d29:	mov eax, 0
0x1d2e:	add rax, rcx
0x1d31:	mov qword ptr [rbp - 0x28], rax
0x1d35:	add qword ptr [rbp - 0x20], 1
0x1d3a:	cmp qword ptr [rbp - 0x20], 2
0x1d3f:	jbe 0x1cf9
0x1d41:	mov qword ptr [rbp - 0x18], 0
0x1d49:	jmp 0x1d95
0x1d4b:	mov rax, qword ptr [rbp - 0x30]
0x1d4f:	lea rdx, qword ptr [rax + 1]
0x1d53:	mov qword ptr [rbp - 0x30], rdx
0x1d57:	mov rdx, qword ptr [rbp - 0x58]
0x1d5b:	add rdx, rax
0x1d5e:	mov rax, qword ptr [rbp - 0x18]
0x1d62:	mov ecx, eax
0x1d64:	mov eax, ecx
0x1d66:	add eax, eax
0x1d68:	add eax, ecx
0x1d6a:	add eax, eax
0x1d6c:	neg eax
0x1d6e:	add eax, 0x12
0x1d71:	mov rsi, qword ptr [rbp - 0x28]
0x1d75:	mov ecx, eax
0x1d77:	shr rsi, cl
0x1d7a:	mov rax, rsi
0x1d7d:	and eax, 0x3f
0x1d80:	mov rcx, rax
0x1d83:	lea rax, qword ptr [rip + 0x1f76]
0x1d8a:	movzx eax, byte ptr [rcx + rax]
0x1d8e:	mov byte ptr [rdx], al
0x1d90:	add qword ptr [rbp - 0x18], 1
0x1d95:	cmp qword ptr [rbp - 0x18], 3
0x1d9a:	jbe 0x1d4b
0x1d9c:	mov rax, qword ptr [rbp - 0x38]
0x1da0:	cmp rax, qword ptr [rbp - 0x50]
0x1da4:	jae 0x1db4
0x1da6:	mov rax, qword ptr [rbp - 0x30]
0x1daa:	cmp rax, qword ptr [rbp - 0x40]
0x1dae:	jb 0x1cef
0x1db4:	mov qword ptr [rbp - 0x10], 0
0x1dbc:	jmp 0x1dd9
0x1dbe:	mov rax, qword ptr [rbp - 0x40]
0x1dc2:	sub rax, qword ptr [rbp - 0x10]
0x1dc6:	lea rdx, qword ptr [rax - 1]
0x1dca:	mov rax, qword ptr [rbp - 0x58]
0x1dce:	add rax, rdx
0x1dd1:	mov byte ptr [rax], 0x3d
0x1dd4:	add qword ptr [rbp - 0x10], 1
0x1dd9:	mov rax, qword ptr [rbp - 0x50]
0x1ddd:	lea rcx, qword ptr [rax + rax]
0x1de1:	movabs rdx, 0xaaaaaaaaaaaaaaab
0x1deb:	mov rax, rcx
0x1dee:	mul rdx
0x1df1:	mov rax, rdx
0x1df4:	shr rax, 1
0x1df7:	mov rdx, rax
0x1dfa:	add rdx, rdx
0x1dfd:	add rdx, rax
0x1e00:	mov rax, rcx
0x1e03:	sub rax, rdx
0x1e06:	cmp rax, qword ptr [rbp - 0x10]
0x1e0a:	ja 0x1dbe
0x1e0c:	mov rax, qword ptr [rbp - 0x40]
0x1e10:	mov rdi, qword ptr [rbp - 8]
0x1e14:	xor rdi, qword ptr fs:[0x28]
0x1e1d:	je 0x1e24
0x1e1f:	call 0x1230
0x1e24:	leave 
0x1e25:	ret 
0x1e26:	push rbp
0x1e27:	mov rbp, rsp
0x1e2a:	sub rsp, 0x20
0x1e2e:	mov qword ptr [rbp - 0x18], rdi
0x1e32:	mov rax, qword ptr fs:[0x28]
0x1e3b:	mov qword ptr [rbp - 8], rax
0x1e3f:	xor eax, eax
0x1e41:	mov qword ptr [rbp - 0x10], 0
0x1e49:	mov rdx, qword ptr [rbp - 0x18]
0x1e4d:	mov rax, qword ptr [rbp - 0x10]
0x1e51:	add rax, rdx
0x1e54:	movzx eax, byte ptr [rax]
0x1e57:	movzx eax, al
0x1e5a:	movsxd rdx, eax
0x1e5d:	lea rax, qword ptr [rip + 0x1edc]
0x1e64:	movzx eax, byte ptr [rdx + rax]
0x1e68:	cmp al, 0x3f
0x1e6a:	jbe 0x1e81
0x1e6c:	mov rax, qword ptr [rbp - 0x10]
0x1e70:	mov rcx, qword ptr [rbp - 8]
0x1e74:	xor rcx, qword ptr fs:[0x28]
0x1e7d:	je 0x1e8d
0x1e7f:	jmp 0x1e88
0x1e81:	add qword ptr [rbp - 0x10], 1
0x1e86:	jmp 0x1e49
0x1e88:	call 0x1230
0x1e8d:	leave 
0x1e8e:	ret 
0x1e8f:	push rbp
0x1e90:	mov rbp, rsp
0x1e93:	sub rsp, 0x40
0x1e97:	mov qword ptr [rbp - 0x28], rdi
0x1e9b:	mov qword ptr [rbp - 0x30], rsi
0x1e9f:	mov qword ptr [rbp - 0x38], rdx
0x1ea3:	mov qword ptr [rbp - 0x40], rcx
0x1ea7:	mov rax, qword ptr fs:[0x28]
0x1eb0:	mov qword ptr [rbp - 8], rax
0x1eb4:	xor eax, eax
0x1eb6:	mov rax, qword ptr [rbp - 0x30]
0x1eba:	add rax, 3
0x1ebe:	shr rax, 2
0x1ec2:	mov rdx, rax
0x1ec5:	mov rax, rdx
0x1ec8:	add rax, rax
0x1ecb:	add rdx, rax
0x1ece:	mov rax, qword ptr [rbp - 0x30]
0x1ed2:	neg rax
0x1ed5:	and eax, 3
0x1ed8:	sub rdx, rax
0x1edb:	mov rax, rdx
0x1ede:	mov qword ptr [rbp - 0x20], rax
0x1ee2:	mov rax, qword ptr [rbp - 0x20]
0x1ee6:	cmp rax, qword ptr [rbp - 0x40]
0x1eea:	jbe 0x1ef4
0x1eec:	mov rax, qword ptr [rbp - 0x40]
0x1ef0:	mov qword ptr [rbp - 0x20], rax
0x1ef4:	mov qword ptr [rbp - 0x18], 0
0x1efc:	mov qword ptr [rbp - 0x10], 0
0x1f04:	jmp 0x2073
0x1f09:	mov rax, qword ptr [rbp - 0x30]
0x1f0d:	sub rax, 1
0x1f11:	cmp rax, qword ptr [rbp - 0x18]
0x1f15:	jbe 0x1f81
0x1f17:	mov rax, qword ptr [rbp - 0x10]
0x1f1b:	lea rdx, qword ptr [rax + 1]
0x1f1f:	mov qword ptr [rbp - 0x10], rdx
0x1f23:	mov rdx, qword ptr [rbp - 0x38]
0x1f27:	lea rcx, qword ptr [rax + rdx]
0x1f2b:	mov rdx, qword ptr [rbp - 0x28]
0x1f2f:	mov rax, qword ptr [rbp - 0x18]
0x1f33:	add rax, rdx
0x1f36:	movzx eax, byte ptr [rax]
0x1f39:	movzx eax, al
0x1f3c:	movsxd rdx, eax
0x1f3f:	lea rax, qword ptr [rip + 0x1dfa]
0x1f46:	movzx eax, byte ptr [rdx + rax]
0x1f4a:	movzx eax, al
0x1f4d:	shl eax, 2
0x1f50:	mov esi, eax
0x1f52:	mov rax, qword ptr [rbp - 0x18]
0x1f56:	lea rdx, qword ptr [rax + 1]
0x1f5a:	mov rax, qword ptr [rbp - 0x28]
0x1f5e:	add rax, rdx
0x1f61:	movzx eax, byte ptr [rax]
0x1f64:	movzx eax, al
0x1f67:	movsxd rdx, eax
0x1f6a:	lea rax, qword ptr [rip + 0x1dcf]
0x1f71:	movzx eax, byte ptr [rdx + rax]
0x1f75:	shr al, 4
0x1f78:	or eax, esi
0x1f7a:	mov byte ptr [rcx], al
0x1f7c:	add qword ptr [rbp - 0x18], 1
0x1f81:	mov rax, qword ptr [rbp - 0x30]
0x1f85:	sub rax, 1
0x1f89:	cmp rax, qword ptr [rbp - 0x18]
0x1f8d:	jbe 0x1ff9
0x1f8f:	mov rax, qword ptr [rbp - 0x10]
0x1f93:	lea rdx, qword ptr [rax + 1]
0x1f97:	mov qword ptr [rbp - 0x10], rdx
0x1f9b:	mov rdx, qword ptr [rbp - 0x38]
0x1f9f:	lea rcx, qword ptr [rax + rdx]
0x1fa3:	mov rdx, qword ptr [rbp - 0x28]
0x1fa7:	mov rax, qword ptr [rbp - 0x18]
0x1fab:	add rax, rdx
0x1fae:	movzx eax, byte ptr [rax]
0x1fb1:	movzx eax, al
0x1fb4:	movsxd rdx, eax
0x1fb7:	lea rax, qword ptr [rip + 0x1d82]
0x1fbe:	movzx eax, byte ptr [rdx + rax]
0x1fc2:	movzx eax, al
0x1fc5:	shl eax, 4
0x1fc8:	mov esi, eax
0x1fca:	mov rax, qword ptr [rbp - 0x18]
0x1fce:	lea rdx, qword ptr [rax + 1]
0x1fd2:	mov rax, qword ptr [rbp - 0x28]
0x1fd6:	add rax, rdx
0x1fd9:	movzx eax, byte ptr [rax]
0x1fdc:	movzx eax, al
0x1fdf:	movsxd rdx, eax
0x1fe2:	lea rax, qword ptr [rip + 0x1d57]
0x1fe9:	movzx eax, byte ptr [rdx + rax]
0x1fed:	shr al, 2
0x1ff0:	or eax, esi
0x1ff2:	mov byte ptr [rcx], al
0x1ff4:	add qword ptr [rbp - 0x18], 1
0x1ff9:	mov rax, qword ptr [rbp - 0x30]
0x1ffd:	sub rax, 1
0x2001:	cmp rax, qword ptr [rbp - 0x18]
0x2005:	jbe 0x206e
0x2007:	mov rax, qword ptr [rbp - 0x10]
0x200b:	lea rdx, qword ptr [rax + 1]
0x200f:	mov qword ptr [rbp - 0x10], rdx
0x2013:	mov rdx, qword ptr [rbp - 0x38]
0x2017:	lea rcx, qword ptr [rax + rdx]
0x201b:	mov rdx, qword ptr [rbp - 0x28]
0x201f:	mov rax, qword ptr [rbp - 0x18]
0x2023:	add rax, rdx
0x2026:	movzx eax, byte ptr [rax]
0x2029:	movzx eax, al
0x202c:	movsxd rdx, eax
0x202f:	lea rax, qword ptr [rip + 0x1d0a]
0x2036:	movzx eax, byte ptr [rdx + rax]
0x203a:	movzx eax, al
0x203d:	shl eax, 6
0x2040:	mov esi, eax
0x2042:	mov rax, qword ptr [rbp - 0x18]
0x2046:	lea rdx, qword ptr [rax + 1]
0x204a:	mov rax, qword ptr [rbp - 0x28]
0x204e:	add rax, rdx
0x2051:	movzx eax, byte ptr [rax]
0x2054:	movzx eax, al
0x2057:	movsxd rdx, eax
0x205a:	lea rax, qword ptr [rip + 0x1cdf]
0x2061:	movzx eax, byte ptr [rdx + rax]
0x2065:	or eax, esi
0x2067:	mov byte ptr [rcx], al
0x2069:	add qword ptr [rbp - 0x18], 1
0x206e:	add qword ptr [rbp - 0x18], 1
0x2073:	mov rax, qword ptr [rbp - 0x18]
0x2077:	cmp rax, qword ptr [rbp - 0x30]
0x207b:	jae 0x208b
0x207d:	mov rax, qword ptr [rbp - 0x10]
0x2081:	cmp rax, qword ptr [rbp - 0x20]
0x2085:	jb 0x1f09
0x208b:	mov rax, qword ptr [rbp - 0x20]
0x208f:	cmp rax, qword ptr [rbp - 0x40]
0x2093:	jae 0x20a3
0x2095:	mov rdx, qword ptr [rbp - 0x38]
0x2099:	mov rax, qword ptr [rbp - 0x20]
0x209d:	add rax, rdx
0x20a0:	mov byte ptr [rax], 0
0x20a3:	mov rax, qword ptr [rbp - 0x20]
0x20a7:	mov rdi, qword ptr [rbp - 8]
0x20ab:	xor rdi, qword ptr fs:[0x28]
0x20b4:	je 0x20bb
0x20b6:	call 0x1230
0x20bb:	leave 
0x20bc:	ret 
0x20bd:	push rbp
0x20be:	mov rbp, rsp
0x20c1:	sub rsp, 0x40
0x20c5:	mov qword ptr [rbp - 0x18], rdi
0x20c9:	mov dword ptr [rbp - 0x1c], esi
0x20cc:	mov qword ptr [rbp - 0x28], rdx
0x20d0:	mov qword ptr [rbp - 0x30], rcx
0x20d4:	mov qword ptr [rbp - 0x38], r8
0x20d8:	mov rax, qword ptr fs:[0x28]
0x20e1:	mov qword ptr [rbp - 8], rax
0x20e5:	xor eax, eax
0x20e7:	mov rax, qword ptr [rbp - 0x18]
0x20eb:	lea rdx, qword ptr [rax + 0x18]
0x20ef:	mov rax, qword ptr [rbp - 0x38]
0x20f3:	mov rsi, rax
0x20f6:	mov rdi, rdx
0x20f9:	call 0x1298
0x20fe:	test eax, eax
0x2100:	jne 0x2129
0x2102:	mov rax, qword ptr [rip + 0x202eef]
0x2109:	mov rax, qword ptr [rax]
0x210c:	mov rdx, qword ptr [rbp - 0x38]
0x2110:	lea rsi, qword ptr [rip + 0x1d29]
0x2117:	mov rdi, rax
0x211a:	mov eax, 0
0x211f:	call 0x12a8
0x2124:	jmp 0x220a
0x2129:	mov rax, qword ptr [rbp - 0x18]
0x212d:	mov eax, dword ptr [rax]
0x212f:	cmp eax, dword ptr [rbp - 0x1c]
0x2132:	je 0x2153
0x2134:	lea rcx, qword ptr [rip + 0x1ee5]
0x213b:	mov edx, 0x18
0x2140:	lea rsi, qword ptr [rip + 0x1d28]
0x2147:	lea rdi, qword ptr [rip + 0x1d2e]
0x214e:	call 0x1250
0x2153:	mov rax, qword ptr [rbp - 0x18]
0x2157:	mov rax, qword ptr [rax + 8]
0x215b:	test rax, rax
0x215e:	je 0x217f
0x2160:	lea rcx, qword ptr [rip + 0x1eb9]
0x2167:	mov edx, 0x19
0x216c:	lea rsi, qword ptr [rip + 0x1cfc]
0x2173:	lea rdi, qword ptr [rip + 0x1d18]
0x217a:	call 0x1250
0x217f:	mov rax, qword ptr [rbp - 0x18]
0x2183:	mov rax, qword ptr [rax + 0x10]
0x2187:	test rax, rax
0x218a:	je 0x21ab
0x218c:	lea rcx, qword ptr [rip + 0x1e8d]
0x2193:	mov edx, 0x1a
0x2198:	lea rsi, qword ptr [rip + 0x1cd0]
0x219f:	lea rdi, qword ptr [rip + 0x1d05]
0x21a6:	call 0x1250
0x21ab:	mov rax, qword ptr [rbp - 0x18]
0x21af:	movzx eax, byte ptr [rax + 0x18]
0x21b3:	test al, al
0x21b5:	je 0x21d6
0x21b7:	lea rcx, qword ptr [rip + 0x1e62]
0x21be:	mov edx, 0x1b
0x21c3:	lea rsi, qword ptr [rip + 0x1ca5]
0x21ca:	lea rdi, qword ptr [rip + 0x1cf1]
0x21d1:	call 0x1250
0x21d6:	mov rax, qword ptr [rbp - 0x18]
0x21da:	mov rdx, qword ptr [rbp - 0x28]
0x21de:	mov qword ptr [rax + 8], rdx
0x21e2:	mov rax, qword ptr [rbp - 0x18]
0x21e6:	mov rdx, qword ptr [rbp - 0x30]
0x21ea:	mov qword ptr [rax + 0x10], rdx
0x21ee:	mov rax, qword ptr [rbp - 0x18]
0x21f2:	lea rcx, qword ptr [rax + 0x18]
0x21f6:	mov rax, qword ptr [rbp - 0x38]
0x21fa:	mov edx, 0x100
0x21ff:	mov rsi, rax
0x2202:	mov rdi, rcx
0x2205:	call 0x11f8
0x220a:	mov rax, qword ptr [rbp - 8]
0x220e:	xor rax, qword ptr fs:[0x28]
0x2217:	je 0x221e
0x2219:	call 0x1230
0x221e:	leave 
0x221f:	ret 
0x2220:	push rbp
0x2221:	mov rbp, rsp
0x2224:	sub rsp, 0x540
0x222b:	mov qword ptr [rbp - 0x538], rdi
0x2232:	mov rax, qword ptr fs:[0x28]
0x223b:	mov qword ptr [rbp - 8], rax
0x223f:	xor eax, eax
0x2241:	lea rsi, qword ptr [rip + 0x1c95]
0x2248:	lea rdi, qword ptr [rip + 0x1c90]
0x224f:	call 0x1300
0x2254:	mov qword ptr [rbp - 0x518], rax
0x225b:	mov rax, qword ptr [rbp - 0x538]
0x2262:	mov esi, 0x578
0x2267:	mov rdi, rax
0x226a:	call 0x1310
0x226f:	mov dword ptr [rbp - 0x52c], 0
0x2279:	jmp 0x22a1
0x227b:	mov eax, dword ptr [rbp - 0x52c]
0x2281:	imul rdx, rax, 0x118
0x2288:	mov rax, qword ptr [rbp - 0x538]
0x228f:	add rdx, rax
0x2292:	mov eax, dword ptr [rbp - 0x52c]
0x2298:	mov dword ptr [rdx], eax
0x229a:	add dword ptr [rbp - 0x52c], 1
0x22a1:	cmp dword ptr [rbp - 0x52c], 4
0x22a8:	jbe 0x227b
0x22aa:	jmp 0x24d7
0x22af:	mov rax, qword ptr [rip + 0x202d42]
0x22b6:	mov rax, qword ptr [rax]
0x22b9:	lea rdx, qword ptr [rbp - 0x410]
0x22c0:	lea rsi, qword ptr [rip + 0x1c29]
0x22c7:	mov rdi, rax
0x22ca:	mov eax, 0
0x22cf:	call 0x12a8
0x22d4:	lea r8, qword ptr [rbp - 0x52d]
0x22db:	lea rdi, qword ptr [rbp - 0x52e]
0x22e2:	lea rcx, qword ptr [rbp - 0x520]
0x22e9:	lea rdx, qword ptr [rbp - 0x528]
0x22f0:	lea rax, qword ptr [rbp - 0x410]
0x22f7:	sub rsp, 8
0x22fb:	lea rsi, qword ptr [rbp - 0x510]
0x2302:	push rsi
0x2303:	mov r9, r8
0x2306:	mov r8, rdi
0x2309:	lea rsi, qword ptr [rip + 0x1c10]
0x2310:	mov rdi, rax
0x2313:	mov eax, 0
0x2318:	call 0x12e0
0x231d:	add rsp, 0x10
0x2321:	movzx eax, byte ptr [rbp - 0x52e]
0x2328:	cmp al, 0x72
0x232a:	jne 0x24d7
0x2330:	movzx eax, byte ptr [rbp - 0x52d]
0x2337:	cmp al, 0x78
0x2339:	jne 0x24d7
0x233f:	mov rax, qword ptr [rbp - 0x520]
0x2346:	mov rcx, rax
0x2349:	mov rax, qword ptr [rbp - 0x528]
0x2350:	mov rsi, rax
0x2353:	mov rax, qword ptr [rip + 0x202c9e]
0x235a:	mov rax, qword ptr [rax]
0x235d:	lea rdx, qword ptr [rbp - 0x510]
0x2364:	mov r8, rdx
0x2367:	mov rdx, rsi
0x236a:	lea rsi, qword ptr [rip + 0x1bdf]
0x2371:	mov rdi, rax
0x2374:	mov eax, 0
0x2379:	call 0x12a8
0x237e:	mov rax, qword ptr [rbp - 0x538]
0x2385:	add rax, 0x118
0x238b:	mov rax, qword ptr [rax + 8]
0x238f:	test rax, rax
0x2392:	jne 0x23ca
0x2394:	mov rdx, qword ptr [rbp - 0x520]
0x239b:	mov rax, qword ptr [rbp - 0x528]
0x23a2:	mov rcx, qword ptr [rbp - 0x538]
0x23a9:	lea rdi, qword ptr [rcx + 0x118]
0x23b0:	lea rcx, qword ptr [rbp - 0x510]
0x23b7:	mov r8, rcx
0x23ba:	mov rcx, rdx
0x23bd:	mov rdx, rax
0x23c0:	mov esi, 1
0x23c5:	call 0x20bd
0x23ca:	lea rax, qword ptr [rbp - 0x510]
0x23d1:	lea rsi, qword ptr [rip + 0x1b9b]
0x23d8:	mov rdi, rax
0x23db:	call 0x1350
0x23e0:	test rax, rax
0x23e3:	jne 0x2400
0x23e5:	lea rax, qword ptr [rbp - 0x510]
0x23ec:	lea rsi, qword ptr [rip + 0x1b86]
0x23f3:	mov rdi, rax
0x23f6:	call 0x1350
0x23fb:	test rax, rax
0x23fe:	je 0x2436
0x2400:	mov rdx, qword ptr [rbp - 0x520]
0x2407:	mov rax, qword ptr [rbp - 0x528]
0x240e:	mov rcx, qword ptr [rbp - 0x538]
0x2415:	lea rdi, qword ptr [rcx + 0x230]
0x241c:	lea rcx, qword ptr [rbp - 0x510]
0x2423:	mov r8, rcx
0x2426:	mov rcx, rdx
0x2429:	mov rdx, rax
0x242c:	mov esi, 2
0x2431:	call 0x20bd
0x2436:	lea rax, qword ptr [rbp - 0x510]
0x243d:	lea rsi, qword ptr [rip + 0x1b3b]
0x2444:	mov rdi, rax
0x2447:	call 0x1350
0x244c:	test rax, rax
0x244f:	je 0x2487
0x2451:	mov rdx, qword ptr [rbp - 0x520]
0x2458:	mov rax, qword ptr [rbp - 0x528]
0x245f:	mov rcx, qword ptr [rbp - 0x538]
0x2466:	lea rdi, qword ptr [rcx + 0x348]
0x246d:	lea rcx, qword ptr [rbp - 0x510]
0x2474:	mov r8, rcx
0x2477:	mov rcx, rdx
0x247a:	mov rdx, rax
0x247d:	mov esi, 3
0x2482:	call 0x20bd
0x2487:	lea rax, qword ptr [rbp - 0x510]
0x248e:	lea rsi, qword ptr [rip + 0x1af6]
0x2495:	mov rdi, rax
0x2498:	call 0x1298
0x249d:	test eax, eax
0x249f:	jne 0x24d7
0x24a1:	mov rdx, qword ptr [rbp - 0x520]
0x24a8:	mov rax, qword ptr [rbp - 0x528]
0x24af:	mov rcx, qword ptr [rbp - 0x538]
0x24b6:	lea rdi, qword ptr [rcx + 0x460]
0x24bd:	lea rcx, qword ptr [rbp - 0x510]
0x24c4:	mov r8, rcx
0x24c7:	mov rcx, rdx
0x24ca:	mov rdx, rax
0x24cd:	mov esi, 4
0x24d2:	call 0x20bd
0x24d7:	mov rdx, qword ptr [rbp - 0x518]
0x24de:	lea rax, qword ptr [rbp - 0x410]
0x24e5:	mov esi, 0x400
0x24ea:	mov rdi, rax
0x24ed:	call 0x1288
0x24f2:	test rax, rax
0x24f5:	jne 0x22af
0x24fb:	mov rax, qword ptr [rbp - 0x518]
0x2502:	mov rdi, rax
0x2505:	call 0x1218
0x250a:	nop 
0x250b:	mov rax, qword ptr [rbp - 8]
0x250f:	xor rax, qword ptr fs:[0x28]
0x2518:	je 0x251f
0x251a:	call 0x1230
0x251f:	leave 
0x2520:	ret 
0x2521:	push rbp
0x2522:	mov rbp, rsp
0x2525:	sub rsp, 0x20
0x2529:	mov qword ptr [rbp - 0x18], rdi
0x252d:	mov rax, qword ptr fs:[0x28]
0x2536:	mov qword ptr [rbp - 8], rax
0x253a:	xor eax, eax
0x253c:	mov rax, qword ptr [rip + 0x202ab5]
0x2543:	mov rax, qword ptr [rax]
0x2546:	mov rcx, rax
0x2549:	mov edx, 0xe
0x254e:	mov esi, 1
0x2553:	lea rdi, qword ptr [rip + 0x1a38]
0x255a:	call 0x1330
0x255f:	mov dword ptr [rbp - 0xc], 0
0x2566:	jmp 0x25d5
0x2568:	mov eax, dword ptr [rbp - 0xc]
0x256b:	imul rdx, rax, 0x118
0x2572:	mov rax, qword ptr [rbp - 0x18]
0x2576:	add rax, rdx
0x2579:	lea rcx, qword ptr [rax + 0x18]
0x257d:	mov eax, dword ptr [rbp - 0xc]
0x2580:	imul rdx, rax, 0x118
0x2587:	mov rax, qword ptr [rbp - 0x18]
0x258b:	add rax, rdx
0x258e:	mov rax, qword ptr [rax + 0x10]
0x2592:	mov rsi, rax
0x2595:	mov eax, dword ptr [rbp - 0xc]
0x2598:	imul rdx, rax, 0x118
0x259f:	mov rax, qword ptr [rbp - 0x18]
0x25a3:	add rax, rdx
0x25a6:	mov rax, qword ptr [rax + 8]
0x25aa:	mov rdx, rax
0x25ad:	mov rax, qword ptr [rip + 0x202a44]
0x25b4:	mov rax, qword ptr [rax]
0x25b7:	mov r8, rcx
0x25ba:	mov rcx, rsi
0x25bd:	lea rsi, qword ptr [rip + 0x19dd]
0x25c4:	mov rdi, rax
0x25c7:	mov eax, 0
0x25cc:	call 0x12a8
0x25d1:	add dword ptr [rbp - 0xc], 1
0x25d5:	cmp dword ptr [rbp - 0xc], 4
0x25d9:	jbe 0x2568
0x25db:	nop 
0x25dc:	mov rax, qword ptr [rbp - 8]
0x25e0:	xor rax, qword ptr fs:[0x28]
0x25e9:	je 0x25f0
0x25eb:	call 0x1230
0x25f0:	leave 
0x25f1:	ret 
0x25f2:	push rbp
0x25f3:	mov rbp, rsp
0x25f6:	sub rsp, 0x20
0x25fa:	mov qword ptr [rbp - 0x18], rdi
0x25fe:	mov qword ptr [rbp - 0x20], rsi
0x2602:	mov rax, qword ptr fs:[0x28]
0x260b:	mov qword ptr [rbp - 8], rax
0x260f:	xor eax, eax
0x2611:	mov rax, qword ptr [rbp - 0x18]
0x2615:	lea rdx, qword ptr [rax + 0x18]
0x2619:	mov rax, qword ptr [rbp - 0x18]
0x261d:	mov rax, qword ptr [rax + 0x10]
0x2621:	mov rcx, rax
0x2624:	mov rax, qword ptr [rbp - 0x18]
0x2628:	mov rax, qword ptr [rax + 8]
0x262c:	mov rsi, rax
0x262f:	mov rax, qword ptr [rip + 0x2029c2]
0x2636:	mov rax, qword ptr [rax]
0x2639:	mov r8, rdx
0x263c:	mov rdx, rsi
0x263f:	lea rsi, qword ptr [rip + 0x1972]
0x2646:	mov rdi, rax
0x2649:	mov eax, 0
0x264e:	call 0x12a8
0x2653:	mov rax, qword ptr [rbp - 0x18]
0x2657:	mov rax, qword ptr [rax + 0x10]
0x265b:	mov rdx, rax
0x265e:	mov rax, qword ptr [rbp - 0x18]
0x2662:	mov rax, qword ptr [rax + 8]
0x2666:	sub rdx, rax
0x2669:	mov rax, rdx
0x266c:	mov rdx, rax
0x266f:	mov rax, qword ptr [rbp - 0x18]
0x2673:	mov rax, qword ptr [rax + 8]
0x2677:	mov rcx, qword ptr [rbp - 0x20]
0x267b:	mov rsi, rcx
0x267e:	mov rdi, rax
0x2681:	call 0x1268
0x2686:	mov rdi, qword ptr [rbp - 8]
0x268a:	xor rdi, qword ptr fs:[0x28]
0x2693:	je 0x269a
0x2695:	call 0x1230
0x269a:	leave 
0x269b:	ret 
0x269c:	push rbp
0x269d:	mov rbp, rsp
0x26a0:	sub rsp, 0x30
0x26a4:	mov qword ptr [rbp - 0x18], rdi
0x26a8:	mov qword ptr [rbp - 0x20], rsi
0x26ac:	mov qword ptr [rbp - 0x28], rdx
0x26b0:	mov qword ptr [rbp - 0x30], rcx
0x26b4:	mov rax, qword ptr fs:[0x28]
0x26bd:	mov qword ptr [rbp - 8], rax
0x26c1:	xor eax, eax
0x26c3:	mov rax, qword ptr [rbp - 0x28]
0x26c7:	lea rsi, qword ptr [rip + 0x190e]
0x26ce:	mov rdi, rax
0x26d1:	call 0x1298
0x26d6:	test eax, eax
0x26d8:	jne 0x26e1
0x26da:	mov eax, 0
0x26df:	jmp 0x2759
0x26e1:	movabs rax, 0x800000000000
0x26eb:	cmp qword ptr [rbp - 0x18], rax
0x26ef:	ja 0x2701
0x26f1:	movabs rax, 0x800000000000
0x26fb:	cmp qword ptr [rbp - 0x20], rax
0x26ff:	jbe 0x2708
0x2701:	mov eax, 0
0x2706:	jmp 0x2759
0x2708:	mov rcx, qword ptr [rbp - 0x20]
0x270c:	mov rdx, qword ptr [rbp - 0x18]
0x2710:	mov rax, qword ptr [rip + 0x2028e1]
0x2717:	mov rax, qword ptr [rax]
0x271a:	mov rsi, qword ptr [rbp - 0x28]
0x271e:	mov r8, rsi
0x2721:	lea rsi, qword ptr [rip + 0x18c0]
0x2728:	mov rdi, rax
0x272b:	mov eax, 0
0x2730:	call 0x12a8
0x2735:	mov rdx, qword ptr [rbp - 0x20]
0x2739:	mov rax, qword ptr [rbp - 0x18]
0x273d:	sub rdx, rax
0x2740:	mov rax, rdx
0x2743:	mov rdx, rax
0x2746:	mov rcx, qword ptr [rbp - 0x30]
0x274a:	mov rax, qword ptr [rbp - 0x18]
0x274e:	mov rsi, rcx
0x2751:	mov rdi, rax
0x2754:	call 0x1268
0x2759:	mov rdi, qword ptr [rbp - 8]
0x275d:	xor rdi, qword ptr fs:[0x28]
0x2766:	je 0x276d
0x2768:	call 0x1230
0x276d:	leave 
0x276e:	ret 
0x276f:	push rbp
0x2770:	mov rbp, rsp
0x2773:	sub rsp, 0x550
0x277a:	mov qword ptr [rbp - 0x548], rdi
0x2781:	mov rax, qword ptr fs:[0x28]
0x278a:	mov qword ptr [rbp - 8], rax
0x278e:	xor eax, eax
0x2790:	lea rsi, qword ptr [rip + 0x1746]
0x2797:	lea rdi, qword ptr [rip + 0x1741]
0x279e:	call 0x1300
0x27a3:	mov qword ptr [rbp - 0x518], rax
0x27aa:	mov qword ptr [rbp - 0x520], 0
0x27b5:	jmp 0x2848
0x27ba:	lea r8, qword ptr [rbp - 0x531]
0x27c1:	lea rdi, qword ptr [rbp - 0x532]
0x27c8:	lea rcx, qword ptr [rbp - 0x528]
0x27cf:	lea rdx, qword ptr [rbp - 0x530]
0x27d6:	lea rax, qword ptr [rbp - 0x410]
0x27dd:	sub rsp, 8
0x27e1:	lea rsi, qword ptr [rbp - 0x510]
0x27e8:	push rsi
0x27e9:	mov r9, r8
0x27ec:	mov r8, rdi
0x27ef:	lea rsi, qword ptr [rip + 0x172a]
0x27f6:	mov rdi, rax
0x27f9:	mov eax, 0
0x27fe:	call 0x12e0
0x2803:	add rsp, 0x10
0x2807:	movzx eax, byte ptr [rbp - 0x532]
0x280e:	cmp al, 0x72
0x2810:	jne 0x2848
0x2812:	movzx eax, byte ptr [rbp - 0x531]
0x2819:	cmp al, 0x78
0x281b:	jne 0x2848
0x281d:	mov rsi, qword ptr [rbp - 0x528]
0x2824:	mov rax, qword ptr [rbp - 0x530]
0x282b:	mov rcx, qword ptr [rbp - 0x548]
0x2832:	lea rdx, qword ptr [rbp - 0x510]
0x2839:	mov rdi, rax
0x283c:	call 0x269c
0x2841:	mov qword ptr [rbp - 0x520], rax
0x2848:	cmp qword ptr [rbp - 0x520], 0
0x2850:	jne 0x2876
0x2852:	mov rdx, qword ptr [rbp - 0x518]
0x2859:	lea rax, qword ptr [rbp - 0x410]
0x2860:	mov esi, 0x400
0x2865:	mov rdi, rax
0x2868:	call 0x1288
0x286d:	test rax, rax
0x2870:	jne 0x27ba
0x2876:	mov rax, qword ptr [rbp - 0x518]
0x287d:	mov rdi, rax
0x2880:	call 0x1218
0x2885:	cmp qword ptr [rbp - 0x520], 0
0x288d:	je 0x28b4
0x288f:	mov rax, qword ptr [rip + 0x202762]
0x2896:	mov rax, qword ptr [rax]
0x2899:	mov rdx, qword ptr [rbp - 0x520]
0x28a0:	lea rsi, qword ptr [rip + 0x1766]
0x28a7:	mov rdi, rax
0x28aa:	mov eax, 0
0x28af:	call 0x12a8
0x28b4:	mov rax, qword ptr [rbp - 0x520]
0x28bb:	mov rcx, qword ptr [rbp - 8]
0x28bf:	xor rcx, qword ptr fs:[0x28]
0x28c8:	je 0x28cf
0x28ca:	call 0x1230
0x28cf:	leave 
0x28d0:	ret 
0x28d1:	push rbp
0x28d2:	mov rbp, rsp
0x28d5:	sub rsp, 0x20
0x28d9:	mov qword ptr [rbp - 0x18], rdi
0x28dd:	mov rax, qword ptr fs:[0x28]
0x28e6:	mov qword ptr [rbp - 8], rax
0x28ea:	xor eax, eax
0x28ec:	mov rax, qword ptr [rbp - 0x18]
0x28f0:	mov edx, 0xa8
0x28f5:	mov esi, 0
0x28fa:	mov rdi, rax
0x28fd:	call 0x1258
0x2902:	mov rax, qword ptr [rbp - 0x18]
0x2906:	add rax, 0x58
0x290a:	mov rdi, rax
0x290d:	call 0x12e8
0x2912:	nop 
0x2913:	mov rax, qword ptr [rbp - 8]
0x2917:	xor rax, qword ptr fs:[0x28]
0x2920:	je 0x2927
0x2922:	call 0x1230
0x2927:	leave 
0x2928:	ret 
0x2929:	push rbp
0x292a:	mov rbp, rsp
0x292d:	push rbx
0x292e:	sub rsp, 0xc8
0x2935:	mov qword ptr [rbp - 0xb8], rdi
0x293c:	mov qword ptr [rbp - 0xc0], rsi
0x2943:	mov qword ptr [rbp - 0xc8], rdx
0x294a:	mov qword ptr [rbp - 0xd0], rcx
0x2951:	mov rax, qword ptr fs:[0x28]
0x295a:	mov qword ptr [rbp - 0x18], rax
0x295e:	xor eax, eax
0x2960:	mov byte ptr [rbp - 0x40], 0x90
0x2964:	mov byte ptr [rbp - 0x3f], 0x5f
0x2968:	mov byte ptr [rbp - 0x3e], 0xc3
0x296c:	mov byte ptr [rbp - 0x3d], 0
0x2970:	mov byte ptr [rbp - 0x30], 0x90
0x2974:	mov byte ptr [rbp - 0x2f], 0x5e
0x2978:	mov byte ptr [rbp - 0x2e], 0xc3
0x297c:	mov byte ptr [rbp - 0x2d], 0
0x2980:	mov byte ptr [rbp - 0x20], 0x90
0x2984:	mov byte ptr [rbp - 0x1f], 0x5a
0x2988:	mov byte ptr [rbp - 0x1e], 0xc3
0x298c:	mov byte ptr [rbp - 0x1d], 0
0x2990:	mov rax, qword ptr [rbp - 0xc0]
0x2997:	lea rdx, qword ptr [rax + 0x230]
0x299e:	lea rax, qword ptr [rbp - 0x40]
0x29a2:	mov rsi, rax
0x29a5:	mov rdi, rdx
0x29a8:	call 0x12d0
0x29ad:	mov qword ptr [rbp - 0xa8], rax
0x29b4:	mov rax, qword ptr [rbp - 0xc0]
0x29bb:	lea rdx, qword ptr [rax + 0x230]
0x29c2:	lea rax, qword ptr [rbp - 0x30]
0x29c6:	mov rsi, rax
0x29c9:	mov rdi, rdx
0x29cc:	call 0x12d0
0x29d1:	mov qword ptr [rbp - 0xa0], rax
0x29d8:	mov rax, qword ptr [rbp - 0xc0]
0x29df:	lea rdx, qword ptr [rax + 0x230]
0x29e6:	lea rax, qword ptr [rbp - 0x20]
0x29ea:	mov rsi, rax
0x29ed:	mov rdi, rdx
0x29f0:	call 0x12d0
0x29f5:	mov qword ptr [rbp - 0x98], rax
0x29fc:	mov rax, qword ptr [rbp - 0xc0]
0x2a03:	lea rdx, qword ptr [rax + 0x348]
0x2a0a:	lea rax, qword ptr [rbp - 0x40]
0x2a0e:	mov rsi, rax
0x2a11:	mov rdi, rdx
0x2a14:	call 0x12d0
0x2a19:	mov qword ptr [rbp - 0x90], rax
0x2a20:	mov rax, qword ptr [rbp - 0xc0]
0x2a27:	lea rdx, qword ptr [rax + 0x348]
0x2a2e:	lea rax, qword ptr [rbp - 0x30]
0x2a32:	mov rsi, rax
0x2a35:	mov rdi, rdx
0x2a38:	call 0x12d0
0x2a3d:	mov qword ptr [rbp - 0x88], rax
0x2a44:	mov rax, qword ptr [rbp - 0xc0]
0x2a4b:	lea rdx, qword ptr [rax + 0x348]
0x2a52:	lea rax, qword ptr [rbp - 0x20]
0x2a56:	mov rsi, rax
0x2a59:	mov rdi, rdx
0x2a5c:	call 0x12d0
0x2a61:	mov qword ptr [rbp - 0x80], rax
0x2a65:	lea rax, qword ptr [rbp - 0x40]
0x2a69:	mov rdi, rax
0x2a6c:	call 0x1220
0x2a71:	mov qword ptr [rbp - 0x78], rax
0x2a75:	lea rax, qword ptr [rbp - 0x30]
0x2a79:	mov rdi, rax
0x2a7c:	call 0x1220
0x2a81:	mov qword ptr [rbp - 0x70], rax
0x2a85:	lea rax, qword ptr [rbp - 0x20]
0x2a89:	mov rdi, rax
0x2a8c:	call 0x1220
0x2a91:	mov qword ptr [rbp - 0x68], rax
0x2a95:	cmp qword ptr [rbp - 0x78], 0
0x2a9a:	jne 0x2abb
0x2a9c:	lea rcx, qword ptr [rip + 0x169d]
0x2aa3:	mov edx, 0x26
0x2aa8:	lea rsi, qword ptr [rip + 0x1581]
0x2aaf:	lea rdi, qword ptr [rip + 0x1588]
0x2ab6:	call 0x1250
0x2abb:	cmp qword ptr [rbp - 0x70], 0
0x2ac0:	jne 0x2ae1
0x2ac2:	lea rcx, qword ptr [rip + 0x1677]
0x2ac9:	mov edx, 0x27
0x2ace:	lea rsi, qword ptr [rip + 0x155b]
0x2ad5:	lea rdi, qword ptr [rip + 0x1575]
0x2adc:	call 0x1250
0x2ae1:	cmp qword ptr [rbp - 0x68], 0
0x2ae6:	jne 0x2b07
0x2ae8:	lea rcx, qword ptr [rip + 0x1651]
0x2aef:	mov edx, 0x28
0x2af4:	lea rsi, qword ptr [rip + 0x1535]
0x2afb:	lea rdi, qword ptr [rip + 0x1562]
0x2b02:	call 0x1250
0x2b07:	lea rsi, qword ptr [rip + 0x1569]
0x2b0e:	mov rdi, -1
0x2b15:	call 0x1340
0x2b1a:	mov qword ptr [rbp - 0x60], rax
0x2b1e:	mov rax, qword ptr [rbp - 0xc0]
0x2b25:	mov rdx, qword ptr [rbp - 0xb8]
0x2b2c:	mov qword ptr [rax + 0x578], rdx
0x2b33:	mov rax, qword ptr [rbp - 0xb8]
0x2b3a:	mov qword ptr [rbp - 0x58], rax
0x2b3e:	mov rax, qword ptr [rbp - 0x58]
0x2b42:	mov qword ptr [rbp - 0x50], rax
0x2b46:	mov rax, qword ptr [rbp - 0x50]
0x2b4a:	mov rbx, qword ptr [rbp - 0x50]
0x2b4e:	mov rdx, qword ptr [rbp - 0xc0]
0x2b55:	mov esi, 0x42
0x2b5a:	mov rdi, rax
0x2b5d:	call 0x12f8
0x2b62:	mov qword ptr [rbx], rax
0x2b65:	mov rax, qword ptr [rbp - 0x50]
0x2b69:	lea rcx, qword ptr [rax + 8]
0x2b6d:	mov rbx, qword ptr [rbp - 0x50]
0x2b71:	mov rax, qword ptr [rbp - 0xc0]
0x2b78:	mov rdx, rax
0x2b7b:	mov esi, 0x42
0x2b80:	mov rdi, rcx
0x2b83:	call 0x12f8
0x2b88:	mov qword ptr [rbx + 8], rax
0x2b8c:	mov rax, qword ptr [rbp - 0x50]
0x2b90:	lea rcx, qword ptr [rax + 0x10]
0x2b94:	mov rbx, qword ptr [rbp - 0x50]
0x2b98:	mov rax, qword ptr [rbp - 0xc0]
0x2b9f:	mov rdx, rax
0x2ba2:	mov esi, 0x42
0x2ba7:	mov rdi, rcx
0x2baa:	call 0x12f8
0x2baf:	mov qword ptr [rbx + 0x10], rax
0x2bb3:	mov rax, qword ptr [rbp - 0x58]
0x2bb7:	add rax, 0x18
0x2bbb:	mov qword ptr [rbp - 0x48], rax
0x2bbf:	cmp qword ptr [rbp - 0xa8], 0
0x2bc7:	je 0x2bed
0x2bc9:	mov rbx, qword ptr [rbp - 0x48]
0x2bcd:	mov rdx, qword ptr [rbp - 0xc0]
0x2bd4:	mov rax, qword ptr [rbp - 0xa8]
0x2bdb:	mov esi, 0x4c
0x2be0:	mov rdi, rax
0x2be3:	call 0x1338
0x2be8:	mov qword ptr [rbx], rax
0x2beb:	jmp 0x2c3a
0x2bed:	cmp qword ptr [rbp - 0x90], 0
0x2bf5:	je 0x2c1b
0x2bf7:	mov rbx, qword ptr [rbp - 0x48]
0x2bfb:	mov rdx, qword ptr [rbp - 0xc0]
0x2c02:	mov rax, qword ptr [rbp - 0x90]
0x2c09:	mov esi, 0x46
0x2c0e:	mov rdi, rax
0x2c11:	call 0x1338
0x2c16:	mov qword ptr [rbx], rax
0x2c19:	jmp 0x2c3a
0x2c1b:	mov rbx, qword ptr [rbp - 0x48]
0x2c1f:	mov rdx, qword ptr [rbp - 0xc0]
0x2c26:	mov rax, qword ptr [rbp - 0x78]
0x2c2a:	mov esi, 0x41
0x2c2f:	mov rdi, rax
0x2c32:	call 0x1338
0x2c37:	mov qword ptr [rbx], rax
0x2c3a:	mov rax, qword ptr [rbp - 0xc0]
0x2c41:	mov rax, qword ptr [rax + 0x580]
0x2c48:	mov rbx, qword ptr [rbp - 0x48]
0x2c4c:	mov rdx, qword ptr [rbp - 0xc0]
0x2c53:	mov esi, 0x53
0x2c58:	mov rdi, rax
0x2c5b:	call 0x1338
0x2c60:	mov qword ptr [rbx + 8], rax
0x2c64:	cmp qword ptr [rbp - 0xa0], 0
0x2c6c:	je 0x2c93
0x2c6e:	mov rbx, qword ptr [rbp - 0x48]
0x2c72:	mov rdx, qword ptr [rbp - 0xc0]
0x2c79:	mov rax, qword ptr [rbp - 0xa0]
0x2c80:	mov esi, 0x4c
0x2c85:	mov rdi, rax
0x2c88:	call 0x1338
0x2c8d:	mov qword ptr [rbx + 0x10], rax
0x2c91:	jmp 0x2ce2
0x2c93:	cmp qword ptr [rbp - 0x88], 0
0x2c9b:	je 0x2cc2
0x2c9d:	mov rbx, qword ptr [rbp - 0x48]
0x2ca1:	mov rdx, qword ptr [rbp - 0xc0]
0x2ca8:	mov rax, qword ptr [rbp - 0x88]
0x2caf:	mov esi, 0x46
0x2cb4:	mov rdi, rax
0x2cb7:	call 0x1338
0x2cbc:	mov qword ptr [rbx + 0x10], rax
0x2cc0:	jmp 0x2ce2
0x2cc2:	mov rbx, qword ptr [rbp - 0x48]
0x2cc6:	mov rdx, qword ptr [rbp - 0xc0]
0x2ccd:	mov rax, qword ptr [rbp - 0x70]
0x2cd1:	mov esi, 0x41
0x2cd6:	mov rdi, rax
0x2cd9:	call 0x1338
0x2cde:	mov qword ptr [rbx + 0x10], rax
0x2ce2:	call 0x1328
0x2ce7:	movsxd rdx, eax
0x2cea:	mov rax, qword ptr [rbp - 0x48]
0x2cee:	mov qword ptr [rax + 0x18], rdx
0x2cf2:	cmp qword ptr [rbp - 0x98], 0
0x2cfa:	je 0x2d21
0x2cfc:	mov rbx, qword ptr [rbp - 0x48]
0x2d00:	mov rdx, qword ptr [rbp - 0xc0]
0x2d07:	mov rax, qword ptr [rbp - 0x98]
0x2d0e:	mov esi, 0x4c
0x2d13:	mov rdi, rax
0x2d16:	call 0x1338
0x2d1b:	mov qword ptr [rbx + 0x20], rax
0x2d1f:	jmp 0x2d6a
0x2d21:	cmp qword ptr [rbp - 0x80], 0
0x2d26:	je 0x2d4a
0x2d28:	mov rbx, qword ptr [rbp - 0x48]
0x2d2c:	mov rdx, qword ptr [rbp - 0xc0]
0x2d33:	mov rax, qword ptr [rbp - 0x80]
0x2d37:	mov esi, 0x46
0x2d3c:	mov rdi, rax
0x2d3f:	call 0x1338
0x2d44:	mov qword ptr [rbx + 0x20], rax
0x2d48:	jmp 0x2d6a
0x2d4a:	mov rbx, qword ptr [rbp - 0x48]
0x2d4e:	mov rdx, qword ptr [rbp - 0xc0]
0x2d55:	mov rax, qword ptr [rbp - 0x68]
0x2d59:	mov esi, 0x41
0x2d5e:	mov rdi, rax
0x2d61:	call 0x1338
0x2d66:	mov qword ptr [rbx + 0x20], rax
0x2d6a:	mov rax, qword ptr [rbp - 0x48]
0x2d6e:	mov qword ptr [rax + 0x28], 7
0x2d76:	mov rbx, qword ptr [rbp - 0x48]
0x2d7a:	mov rdx, qword ptr [rbp - 0xc0]
0x2d81:	mov rax, qword ptr [rbp - 0x60]
0x2d85:	mov esi, 0x4c
0x2d8a:	mov rdi, rax
0x2d8d:	call 0x1338
0x2d92:	mov qword ptr [rbx + 0x30], rax
0x2d96:	mov rax, qword ptr [rbp - 0xb8]
0x2d9d:	lea rcx, qword ptr [rax + 0x58]
0x2da1:	mov rbx, qword ptr [rbp - 0x48]
0x2da5:	mov rax, qword ptr [rbp - 0xc0]
0x2dac:	mov rdx, rax
0x2daf:	mov esi, 0x42
0x2db4:	mov rdi, rcx
0x2db7:	call 0x1338
0x2dbc:	mov qword ptr [rbx + 0x38], rax
0x2dc0:	mov rax, qword ptr [rbp - 0xb8]
0x2dc7:	lea rcx, qword ptr [rax + 0x58]
0x2dcb:	mov rdx, qword ptr [rbp - 0xd0]
0x2dd2:	mov rax, qword ptr [rbp - 0xc8]
0x2dd9:	mov rsi, rax
0x2ddc:	mov rdi, rcx
0x2ddf:	call 0x12d8
0x2de4:	mov rcx, qword ptr [rbp - 0x18]
0x2de8:	xor rcx, qword ptr fs:[0x28]
0x2df1:	je 0x2df8
0x2df3:	call 0x1230
0x2df8:	add rsp, 0xc8
0x2dff:	pop rbx
0x2e00:	pop rbp
0x2e01:	ret 
0x2e02:	push rbp
0x2e03:	mov rbp, rsp
0x2e06:	push rbx
0x2e07:	sub rsp, 0x38
0x2e0b:	mov qword ptr [rbp - 0x38], rdi
0x2e0f:	mov qword ptr [rbp - 0x40], rsi
0x2e13:	mov rax, qword ptr fs:[0x28]
0x2e1c:	mov qword ptr [rbp - 0x18], rax
0x2e20:	xor eax, eax
0x2e22:	mov rax, qword ptr [rbp - 0x38]
0x2e26:	mov qword ptr [rbp - 0x20], rax
0x2e2a:	mov qword ptr [rbp - 0x28], 0
0x2e32:	jmp 0x2ea8
0x2e34:	mov rax, qword ptr [rbp - 0x28]
0x2e38:	lea rdx, qword ptr [rax*8]
0x2e40:	mov rax, qword ptr [rbp - 0x20]
0x2e44:	add rax, rdx
0x2e47:	movzx eax, byte ptr [rax + 6]
0x2e4b:	cmp al, 0x46
0x2e4d:	je 0x2e6a
0x2e4f:	mov rax, qword ptr [rbp - 0x28]
0x2e53:	lea rdx, qword ptr [rax*8]
0x2e5b:	mov rax, qword ptr [rbp - 0x20]
0x2e5f:	add rax, rdx
0x2e62:	movzx eax, byte ptr [rax + 6]
0x2e66:	cmp al, 0x4c
0x2e68:	jne 0x2ea3
0x2e6a:	mov rax, qword ptr [rbp - 0x28]
0x2e6e:	lea rdx, qword ptr [rax*8]
0x2e76:	mov rax, qword ptr [rbp - 0x20]
0x2e7a:	lea rbx, qword ptr [rdx + rax]
0x2e7e:	mov rax, qword ptr [rbp - 0x28]
0x2e82:	lea rdx, qword ptr [rax*8]
0x2e8a:	mov rax, qword ptr [rbp - 0x20]
0x2e8e:	add rdx, rax
0x2e91:	mov rax, qword ptr [rbp - 0x40]
0x2e95:	mov rsi, rax
0x2e98:	mov rdi, qword ptr [rdx]
0x2e9b:	call 0x1248
0x2ea0:	mov qword ptr [rbx], rax
0x2ea3:	add qword ptr [rbp - 0x28], 1
0x2ea8:	cmp qword ptr [rbp - 0x28], 0xa
0x2ead:	jbe 0x2e34
0x2eaf:	nop 
0x2eb0:	mov rax, qword ptr [rbp - 0x18]
0x2eb4:	xor rax, qword ptr fs:[0x28]
0x2ebd:	je 0x2ec4
0x2ebf:	call 0x1230
0x2ec4:	add rsp, 0x38
0x2ec8:	pop rbx
0x2ec9:	pop rbp
0x2eca:	ret 
0x2ecb:	push rbp
0x2ecc:	mov rbp, rsp
0x2ecf:	push rbx
0x2ed0:	sub rsp, 0x58
0x2ed4:	mov qword ptr [rbp - 0x48], rdi
0x2ed8:	mov qword ptr [rbp - 0x50], rsi
0x2edc:	mov qword ptr [rbp - 0x58], rdx
0x2ee0:	mov rax, qword ptr fs:[0x28]
0x2ee9:	mov qword ptr [rbp - 0x18], rax
0x2eed:	xor eax, eax
0x2eef:	mov eax, 0x58
0x2ef4:	cmp qword ptr [rbp - 0x50], 0x58
0x2ef9:	cmovbe rax, qword ptr [rbp - 0x50]
0x2efe:	sub rax, 7
0x2f02:	mov qword ptr [rbp - 0x30], rax
0x2f06:	mov rax, qword ptr [rbp - 0x48]
0x2f0a:	mov qword ptr [rbp - 0x28], rax
0x2f0e:	mov rax, qword ptr [rbp - 0x30]
0x2f12:	mov esi, 8
0x2f17:	mov rdi, rax
0x2f1a:	call 0x1290
0x2f1f:	mov qword ptr [rbp - 0x20], rax
0x2f23:	mov qword ptr [rbp - 0x38], 0
0x2f2b:	jmp 0x2f6b
0x2f2d:	mov rax, qword ptr [rbp - 0x38]
0x2f31:	lea rdx, qword ptr [rax*8]
0x2f39:	mov rax, qword ptr [rbp - 0x20]
0x2f3d:	lea rbx, qword ptr [rdx + rax]
0x2f41:	mov rax, qword ptr [rbp - 0x38]
0x2f45:	lea rdx, qword ptr [rax*8]
0x2f4d:	mov rax, qword ptr [rbp - 0x28]
0x2f51:	add rdx, rax
0x2f54:	mov rax, qword ptr [rbp - 0x58]
0x2f58:	mov rsi, rax
0x2f5b:	mov rdi, qword ptr [rdx]
0x2f5e:	call 0x1248
0x2f63:	mov qword ptr [rbx], rax
0x2f66:	add qword ptr [rbp - 0x38], 1
0x2f6b:	mov rax, qword ptr [rbp - 0x38]
0x2f6f:	cmp rax, qword ptr [rbp - 0x30]
0x2f73:	jb 0x2f2d
0x2f75:	mov rax, qword ptr [rbp - 0x20]
0x2f79:	mov rcx, qword ptr [rbp - 0x18]
0x2f7d:	xor rcx, qword ptr fs:[0x28]
0x2f86:	je 0x2f8d
0x2f88:	call 0x1230
0x2f8d:	add rsp, 0x58
0x2f91:	pop rbx
0x2f92:	pop rbp
0x2f93:	ret 
0x2f94:	push rbp
0x2f95:	mov rbp, rsp
0x2f98:	sub rsp, 0x30
0x2f9c:	mov qword ptr [rbp - 0x28], rdi
0x2fa0:	mov qword ptr [rbp - 0x30], rsi
0x2fa4:	mov rax, qword ptr fs:[0x28]
0x2fad:	mov qword ptr [rbp - 8], rax
0x2fb1:	xor eax, eax
0x2fb3:	mov rax, qword ptr [rbp - 0x28]
0x2fb7:	mov qword ptr [rbp - 0x10], rax
0x2fbb:	mov dword ptr [rbp - 0x14], 0
0x2fc2:	jmp 0x3016
0x2fc4:	mov eax, dword ptr [rbp - 0x14]
0x2fc7:	movsxd rdx, eax
0x2fca:	mov rax, qword ptr [rbp - 0x30]
0x2fce:	add rdx, rax
0x2fd1:	mov eax, dword ptr [rbp - 0x14]
0x2fd4:	movsxd rcx, eax
0x2fd7:	mov rax, qword ptr [rbp - 0x10]
0x2fdb:	add rax, rcx
0x2fde:	movzx eax, byte ptr [rax]
0x2fe1:	cmp al, 0x1f
0x2fe3:	jle 0x300b
0x2fe5:	mov eax, dword ptr [rbp - 0x14]
0x2fe8:	movsxd rcx, eax
0x2feb:	mov rax, qword ptr [rbp - 0x10]
0x2fef:	add rax, rcx
0x2ff2:	movzx eax, byte ptr [rax]
0x2ff5:	cmp al, 0x7f
0x2ff7:	je 0x300b
0x2ff9:	mov eax, dword ptr [rbp - 0x14]
0x2ffc:	movsxd rcx, eax
0x2fff:	mov rax, qword ptr [rbp - 0x10]
0x3003:	add rax, rcx
0x3006:	movzx eax, byte ptr [rax]
0x3009:	jmp 0x3010
0x300b:	mov eax, 0x2e
0x3010:	mov byte ptr [rdx], al
0x3012:	add dword ptr [rbp - 0x14], 1
0x3016:	mov eax, dword ptr [rbp - 0x14]
0x3019:	cmp eax, 7
0x301c:	jbe 0x2fc4
0x301e:	mov rax, qword ptr [rbp - 0x30]
0x3022:	mov rsi, qword ptr [rbp - 8]
0x3026:	xor rsi, qword ptr fs:[0x28]
0x302f:	je 0x3036
0x3031:	call 0x1230
0x3036:	leave 
0x3037:	ret 
0x3038:	push rbp
0x3039:	mov rbp, rsp
0x303c:	sub rsp, 0x70
0x3040:	mov qword ptr [rbp - 0x58], rdi
0x3044:	mov qword ptr [rbp - 0x60], rsi
0x3048:	mov qword ptr [rbp - 0x68], rdx
0x304c:	mov rax, qword ptr fs:[0x28]
0x3055:	mov qword ptr [rbp - 8], rax
0x3059:	xor eax, eax
0x305b:	movabs rax, 0x3025203a73303225
0x3065:	mov qword ptr [rbp - 0x20], rax
0x3069:	movabs rax, 0x2e25222820703831
0x3073:	mov qword ptr [rbp - 0x18], rax
0x3077:	mov dword ptr [rbp - 0x10], 0x29227338
0x307e:	mov word ptr [rbp - 0xc], 0xa
0x3084:	mov rax, qword ptr [rbp - 0x58]
0x3088:	mov qword ptr [rbp - 0x48], rax
0x308c:	mov rax, qword ptr [rbp - 0x48]
0x3090:	mov qword ptr [rbp - 0x40], rax
0x3094:	mov rax, qword ptr [rbp - 0x48]
0x3098:	add rax, 0x18
0x309c:	mov qword ptr [rbp - 0x38], rax
0x30a0:	mov rax, qword ptr [rip + 0x201f51]
0x30a7:	mov rax, qword ptr [rax]
0x30aa:	mov rcx, rax
0x30ad:	mov edx, 0x36
0x30b2:	mov esi, 1
0x30b7:	lea rdi, qword ptr [rip + 0xfc2]
0x30be:	call 0x1330
0x30c3:	mov rax, qword ptr [rip + 0x201f2e]
0x30ca:	mov rax, qword ptr [rax]
0x30cd:	mov rdx, qword ptr [rbp - 0x68]
0x30d1:	lea rsi, qword ptr [rip + 0xfdf]
0x30d8:	mov rdi, rax
0x30db:	mov eax, 0
0x30e0:	call 0x12a8
0x30e5:	mov rax, qword ptr [rip + 0x201f0c]
0x30ec:	mov rax, qword ptr [rax]
0x30ef:	mov rcx, rax
0x30f2:	mov edx, 0x36
0x30f7:	mov esi, 1
0x30fc:	lea rdi, qword ptr [rip + 0xf7d]
0x3103:	call 0x1330
0x3108:	mov rax, qword ptr [rbp - 0x40]
0x310c:	lea rdx, qword ptr [rbp - 0x30]
0x3110:	mov rsi, rdx
0x3113:	mov rdi, rax
0x3116:	call 0x2f94
0x311b:	mov rcx, rax
0x311e:	mov rax, qword ptr [rbp - 0x40]
0x3122:	mov rdx, qword ptr [rax]
0x3125:	mov rax, qword ptr [rip + 0x201ecc]
0x312c:	mov rax, qword ptr [rax]
0x312f:	lea rsi, qword ptr [rbp - 0x20]
0x3133:	mov r8, rcx
0x3136:	mov rcx, rdx
0x3139:	lea rdx, qword ptr [rip + 0xf7b]
0x3140:	mov rdi, rax
0x3143:	mov eax, 0
0x3148:	call 0x12a8
0x314d:	mov rax, qword ptr [rbp - 0x40]
0x3151:	lea rdx, qword ptr [rax + 8]
0x3155:	lea rax, qword ptr [rbp - 0x30]
0x3159:	mov rsi, rax
0x315c:	mov rdi, rdx
0x315f:	call 0x2f94
0x3164:	mov rcx, rax
0x3167:	mov rax, qword ptr [rbp - 0x40]
0x316b:	mov rdx, qword ptr [rax + 8]
0x316f:	mov rax, qword ptr [rip + 0x201e82]
0x3176:	mov rax, qword ptr [rax]
0x3179:	lea rsi, qword ptr [rbp - 0x20]
0x317d:	mov r8, rcx
0x3180:	mov rcx, rdx
0x3183:	lea rdx, qword ptr [rip + 0xf3a]
0x318a:	mov rdi, rax
0x318d:	mov eax, 0
0x3192:	call 0x12a8
0x3197:	mov rax, qword ptr [rbp - 0x40]
0x319b:	lea rdx, qword ptr [rax + 0x10]
0x319f:	lea rax, qword ptr [rbp - 0x30]
0x31a3:	mov rsi, rax
0x31a6:	mov rdi, rdx
0x31a9:	call 0x2f94
0x31ae:	mov rcx, rax
0x31b1:	mov rax, qword ptr [rbp - 0x40]
0x31b5:	mov rdx, qword ptr [rax + 0x10]
0x31b9:	mov rax, qword ptr [rip + 0x201e38]
0x31c0:	mov rax, qword ptr [rax]
0x31c3:	lea rsi, qword ptr [rbp - 0x20]
0x31c7:	mov r8, rcx
0x31ca:	mov rcx, rdx
0x31cd:	lea rdx, qword ptr [rip + 0xefc]
0x31d4:	mov rdi, rax
0x31d7:	mov eax, 0
0x31dc:	call 0x12a8
0x31e1:	mov rax, qword ptr [rip + 0x201e10]
0x31e8:	mov rax, qword ptr [rax]
0x31eb:	mov rsi, rax
0x31ee:	mov edi, 0xa
0x31f3:	call 0x1278
0x31f8:	mov rax, qword ptr [rbp - 0x38]
0x31fc:	lea rdx, qword ptr [rbp - 0x30]
0x3200:	mov rsi, rdx
0x3203:	mov rdi, rax
0x3206:	call 0x2f94
0x320b:	mov rcx, rax
0x320e:	mov rax, qword ptr [rbp - 0x38]
0x3212:	mov rdx, qword ptr [rax]
0x3215:	mov rax, qword ptr [rip + 0x201ddc]
0x321c:	mov rax, qword ptr [rax]
0x321f:	lea rsi, qword ptr [rbp - 0x20]
0x3223:	mov r8, rcx
0x3226:	mov rcx, rdx
0x3229:	lea rdx, qword ptr [rip + 0xea9]
0x3230:	mov rdi, rax
0x3233:	mov eax, 0
0x3238:	call 0x12a8
0x323d:	mov rax, qword ptr [rbp - 0x38]
0x3241:	lea rdx, qword ptr [rax + 8]
0x3245:	lea rax, qword ptr [rbp - 0x30]
0x3249:	mov rsi, rax
0x324c:	mov rdi, rdx
0x324f:	call 0x2f94
0x3254:	mov rcx, rax
0x3257:	mov rax, qword ptr [rbp - 0x38]
0x325b:	mov rdx, qword ptr [rax + 8]
0x325f:	mov rax, qword ptr [rip + 0x201d92]
0x3266:	mov rax, qword ptr [rax]
0x3269:	lea rsi, qword ptr [rbp - 0x20]
0x326d:	mov r8, rcx
0x3270:	mov rcx, rdx
0x3273:	lea rdx, qword ptr [rip + 0xe6b]
0x327a:	mov rdi, rax
0x327d:	mov eax, 0
0x3282:	call 0x12a8
0x3287:	mov rax, qword ptr [rbp - 0x38]
0x328b:	lea rdx, qword ptr [rax + 0x10]
0x328f:	lea rax, qword ptr [rbp - 0x30]
0x3293:	mov rsi, rax
0x3296:	mov rdi, rdx
0x3299:	call 0x2f94
0x329e:	mov rcx, rax
0x32a1:	mov rax, qword ptr [rbp - 0x38]
0x32a5:	mov rdx, qword ptr [rax + 0x10]
0x32a9:	mov rax, qword ptr [rip + 0x201d48]
0x32b0:	mov rax, qword ptr [rax]
0x32b3:	lea rsi, qword ptr [rbp - 0x20]
0x32b7:	mov r8, rcx
0x32ba:	mov rcx, rdx
0x32bd:	lea rdx, qword ptr [rip + 0xe30]
0x32c4:	mov rdi, rax
0x32c7:	mov eax, 0
0x32cc:	call 0x12a8
0x32d1:	mov rax, qword ptr [rbp - 0x38]
0x32d5:	lea rdx, qword ptr [rax + 0x18]
0x32d9:	lea rax, qword ptr [rbp - 0x30]
0x32dd:	mov rsi, rax
0x32e0:	mov rdi, rdx
0x32e3:	call 0x2f94
0x32e8:	mov rcx, rax
0x32eb:	mov rax, qword ptr [rbp - 0x38]
0x32ef:	mov rdx, qword ptr [rax + 0x18]
0x32f3:	mov rax, qword ptr [rip + 0x201cfe]
0x32fa:	mov rax, qword ptr [rax]
0x32fd:	lea rsi, qword ptr [rbp - 0x20]
0x3301:	mov r8, rcx
0x3304:	mov rcx, rdx
0x3307:	lea rdx, qword ptr [rip + 0xdf2]
0x330e:	mov rdi, rax
0x3311:	mov eax, 0
0x3316:	call 0x12a8
0x331b:	mov rax, qword ptr [rbp - 0x38]
0x331f:	lea rdx, qword ptr [rax + 0x20]
0x3323:	lea rax, qword ptr [rbp - 0x30]
0x3327:	mov rsi, rax
0x332a:	mov rdi, rdx
0x332d:	call 0x2f94
0x3332:	mov rcx, rax
0x3335:	mov rax, qword ptr [rbp - 0x38]
0x3339:	mov rdx, qword ptr [rax + 0x20]
0x333d:	mov rax, qword ptr [rip + 0x201cb4]
0x3344:	mov rax, qword ptr [rax]
0x3347:	lea rsi, qword ptr [rbp - 0x20]
0x334b:	mov r8, rcx
0x334e:	mov rcx, rdx
0x3351:	lea rdx, qword ptr [rip + 0xdb5]
0x3358:	mov rdi, rax
0x335b:	mov eax, 0
0x3360:	call 0x12a8
0x3365:	mov rax, qword ptr [rbp - 0x38]
0x3369:	lea rdx, qword ptr [rax + 0x28]
0x336d:	lea rax, qword ptr [rbp - 0x30]
0x3371:	mov rsi, rax
0x3374:	mov rdi, rdx
0x3377:	call 0x2f94
0x337c:	mov rcx, rax
0x337f:	mov rax, qword ptr [rbp - 0x38]
0x3383:	mov rdx, qword ptr [rax + 0x28]
0x3387:	mov rax, qword ptr [rip + 0x201c6a]
0x338e:	mov rax, qword ptr [rax]
0x3391:	lea rsi, qword ptr [rbp - 0x20]
0x3395:	mov r8, rcx
0x3398:	mov rcx, rdx
0x339b:	lea rdx, qword ptr [rip + 0xd77]
0x33a2:	mov rdi, rax
0x33a5:	mov eax, 0
0x33aa:	call 0x12a8
0x33af:	mov rax, qword ptr [rbp - 0x38]
0x33b3:	lea rdx, qword ptr [rax + 0x30]
0x33b7:	lea rax, qword ptr [rbp - 0x30]
0x33bb:	mov rsi, rax
0x33be:	mov rdi, rdx
0x33c1:	call 0x2f94
0x33c6:	mov rcx, rax
0x33c9:	mov rax, qword ptr [rbp - 0x38]
0x33cd:	mov rdx, qword ptr [rax + 0x30]
0x33d1:	mov rax, qword ptr [rip + 0x201c20]
0x33d8:	mov rax, qword ptr [rax]
0x33db:	lea rsi, qword ptr [rbp - 0x20]
0x33df:	mov r8, rcx
0x33e2:	mov rcx, rdx
0x33e5:	lea rdx, qword ptr [rip + 0xd3b]
0x33ec:	mov rdi, rax
0x33ef:	mov eax, 0
0x33f4:	call 0x12a8
0x33f9:	mov rax, qword ptr [rip + 0x201bf8]
0x3400:	mov rax, qword ptr [rax]
0x3403:	mov rsi, rax
0x3406:	mov edi, 0xa
0x340b:	call 0x1278
0x3410:	mov rax, qword ptr [rbp - 0x38]
0x3414:	lea rdx, qword ptr [rax + 0x38]
0x3418:	lea rax, qword ptr [rbp - 0x30]
0x341c:	mov rsi, rax
0x341f:	mov rdi, rdx
0x3422:	call 0x2f94
0x3427:	mov rcx, rax
0x342a:	mov rax, qword ptr [rbp - 0x38]
0x342e:	mov rdx, qword ptr [rax + 0x38]
0x3432:	mov rax, qword ptr [rip + 0x201bbf]
0x3439:	mov rax, qword ptr [rax]
0x343c:	lea rsi, qword ptr [rbp - 0x20]
0x3440:	mov r8, rcx
0x3443:	mov rcx, rdx
0x3446:	lea rdx, qword ptr [rip + 0xce8]
0x344d:	mov rdi, rax
0x3450:	mov eax, 0
0x3455:	call 0x12a8
0x345a:	mov rax, qword ptr [rip + 0x201b97]
0x3461:	mov rax, qword ptr [rax]
0x3464:	mov rsi, rax
0x3467:	mov edi, 0xa
0x346c:	call 0x1278
0x3471:	mov rax, qword ptr [rbp - 0x58]
0x3475:	add rax, 0x58
0x3479:	mov rdi, rax
0x347c:	call 0x1318
0x3481:	mov rax, qword ptr [rip + 0x201b70]
0x3488:	mov rax, qword ptr [rax]
0x348b:	mov rcx, rax
0x348e:	mov edx, 0x36
0x3493:	mov esi, 1
0x3498:	lea rdi, qword ptr [rip + 0xbe1]
0x349f:	call 0x1330
0x34a4:	mov rax, qword ptr [rip + 0x201b4d]
0x34ab:	mov rax, qword ptr [rax]
0x34ae:	mov rsi, rax
0x34b1:	mov edi, 0xa
0x34b6:	call 0x1278
0x34bb:	nop 
0x34bc:	mov rax, qword ptr [rbp - 8]
0x34c0:	xor rax, qword ptr fs:[0x28]
0x34c9:	je 0x34d0
0x34cb:	call 0x1230
0x34d0:	leave 
0x34d1:	ret 
0x34d2:	push rbp
0x34d3:	mov rbp, rsp
0x34d6:	sub rsp, 0x20
0x34da:	mov qword ptr [rbp - 0x18], rdi
0x34de:	mov rax, qword ptr fs:[0x28]
0x34e7:	mov qword ptr [rbp - 8], rax
0x34eb:	xor eax, eax
0x34ed:	mov rax, qword ptr [rbp - 0x18]
0x34f1:	mov ecx, 0x4c
0x34f6:	mov esi, 0
0x34fb:	mov qword ptr [rax], rsi
0x34fe:	mov edx, ecx
0x3500:	add rdx, rax
0x3503:	add rdx, 8
0x3507:	mov qword ptr [rdx - 0x10], rsi
0x350b:	lea rdx, qword ptr [rax + 8]
0x350f:	and rdx, 0xfffffffffffffff8
0x3513:	sub rax, rdx
0x3516:	add ecx, eax
0x3518:	and ecx, 0xfffffff8
0x351b:	mov eax, ecx
0x351d:	shr eax, 3
0x3520:	mov ecx, eax
0x3522:	mov rdi, rdx
0x3525:	mov rax, rsi
0x3528:	rep stosq qword ptr [rdi], rax
0x352b:	mov rax, qword ptr [rbp - 0x18]
0x352f:	mov byte ptr [rax], 0x6a
0x3532:	mov rax, qword ptr [rbp - 0x18]
0x3536:	mov byte ptr [rax + 1], 0x29
0x353a:	mov rax, qword ptr [rbp - 0x18]
0x353e:	mov byte ptr [rax + 2], 0x58
0x3542:	mov rax, qword ptr [rbp - 0x18]
0x3546:	mov byte ptr [rax + 3], 0x99
0x354a:	mov rax, qword ptr [rbp - 0x18]
0x354e:	mov byte ptr [rax + 4], 0x6a
0x3552:	mov rax, qword ptr [rbp - 0x18]
0x3556:	mov byte ptr [rax + 5], 2
0x355a:	mov rax, qword ptr [rbp - 0x18]
0x355e:	mov byte ptr [rax + 6], 0x5f
0x3562:	mov rax, qword ptr [rbp - 0x18]
0x3566:	mov byte ptr [rax + 7], 0x6a
0x356a:	mov rax, qword ptr [rbp - 0x18]
0x356e:	mov byte ptr [rax + 8], 1
0x3572:	mov rax, qword ptr [rbp - 0x18]
0x3576:	mov byte ptr [rax + 9], 0x5e
0x357a:	mov rax, qword ptr [rbp - 0x18]
0x357e:	mov byte ptr [rax + 0xa], 0xf
0x3582:	mov rax, qword ptr [rbp - 0x18]
0x3586:	mov byte ptr [rax + 0xb], 5
0x358a:	mov rax, qword ptr [rbp - 0x18]
0x358e:	mov byte ptr [rax + 0xc], 0x48
0x3592:	mov rax, qword ptr [rbp - 0x18]
0x3596:	mov byte ptr [rax + 0xd], 0x97
0x359a:	mov rax, qword ptr [rbp - 0x18]
0x359e:	mov byte ptr [rax + 0xe], 0x48
0x35a2:	mov rax, qword ptr [rbp - 0x18]
0x35a6:	mov byte ptr [rax + 0xf], 0xb9
0x35aa:	mov rax, qword ptr [rbp - 0x18]
0x35ae:	mov byte ptr [rax + 0x10], 2
0x35b2:	mov rax, qword ptr [rbp - 0x18]
0x35b6:	mov byte ptr [rax + 0x12], 0x15
0x35ba:	mov rax, qword ptr [rbp - 0x18]
0x35be:	mov byte ptr [rax + 0x13], 0xb3
0x35c2:	mov rax, qword ptr [rbp - 0x18]
0x35c6:	mov byte ptr [rax + 0x14], 0x7f
0x35ca:	mov rax, qword ptr [rbp - 0x18]
0x35ce:	mov byte ptr [rax + 0x17], 1
0x35d2:	mov rax, qword ptr [rbp - 0x18]
0x35d6:	mov byte ptr [rax + 0x18], 0x51
0x35da:	mov rax, qword ptr [rbp - 0x18]
0x35de:	mov byte ptr [rax + 0x19], 0x48
0x35e2:	mov rax, qword ptr [rbp - 0x18]
0x35e6:	mov byte ptr [rax + 0x1a], 0x89
0x35ea:	mov rax, qword ptr [rbp - 0x18]
0x35ee:	mov byte ptr [rax + 0x1b], 0xe6
0x35f2:	mov rax, qword ptr [rbp - 0x18]
0x35f6:	mov byte ptr [rax + 0x1c], 0x6a
0x35fa:	mov rax, qword ptr [rbp - 0x18]
0x35fe:	mov byte ptr [rax + 0x1d], 0x10
0x3602:	mov rax, qword ptr [rbp - 0x18]
0x3606:	mov byte ptr [rax + 0x1e], 0x5a
0x360a:	mov rax, qword ptr [rbp - 0x18]
0x360e:	mov byte ptr [rax + 0x1f], 0x6a
0x3612:	mov rax, qword ptr [rbp - 0x18]
0x3616:	mov byte ptr [rax + 0x20], 0x2a
0x361a:	mov rax, qword ptr [rbp - 0x18]
0x361e:	mov byte ptr [rax + 0x21], 0x58
0x3622:	mov rax, qword ptr [rbp - 0x18]
0x3626:	mov byte ptr [rax + 0x22], 0xf
0x362a:	mov rax, qword ptr [rbp - 0x18]
0x362e:	mov byte ptr [rax + 0x23], 5
0x3632:	mov rax, qword ptr [rbp - 0x18]
0x3636:	mov byte ptr [rax + 0x24], 0x6a
0x363a:	mov rax, qword ptr [rbp - 0x18]
0x363e:	mov byte ptr [rax + 0x25], 3
0x3642:	mov rax, qword ptr [rbp - 0x18]
0x3646:	mov byte ptr [rax + 0x26], 0x5e
0x364a:	mov rax, qword ptr [rbp - 0x18]
0x364e:	mov byte ptr [rax + 0x27], 0x48
0x3652:	mov rax, qword ptr [rbp - 0x18]
0x3656:	mov byte ptr [rax + 0x28], 0xff
0x365a:	mov rax, qword ptr [rbp - 0x18]
0x365e:	mov byte ptr [rax + 0x29], 0xce
0x3662:	mov rax, qword ptr [rbp - 0x18]
0x3666:	mov byte ptr [rax + 0x2a], 0x6a
0x366a:	mov rax, qword ptr [rbp - 0x18]
0x366e:	mov byte ptr [rax + 0x2b], 0x21
0x3672:	mov rax, qword ptr [rbp - 0x18]
0x3676:	mov byte ptr [rax + 0x2c], 0x58
0x367a:	mov rax, qword ptr [rbp - 0x18]
0x367e:	mov byte ptr [rax + 0x2d], 0xf
0x3682:	mov rax, qword ptr [rbp - 0x18]
0x3686:	mov byte ptr [rax + 0x2e], 5
0x368a:	mov rax, qword ptr [rbp - 0x18]
0x368e:	mov byte ptr [rax + 0x2f], 0x75
0x3692:	mov rax, qword ptr [rbp - 0x18]
0x3696:	mov byte ptr [rax + 0x30], 0xf6
0x369a:	mov rax, qword ptr [rbp - 0x18]
0x369e:	mov byte ptr [rax + 0x31], 0x6a
0x36a2:	mov rax, qword ptr [rbp - 0x18]
0x36a6:	mov byte ptr [rax + 0x32], 0x3b
0x36aa:	mov rax, qword ptr [rbp - 0x18]
0x36ae:	mov byte ptr [rax + 0x33], 0x58
0x36b2:	mov rax, qword ptr [rbp - 0x18]
0x36b6:	mov byte ptr [rax + 0x34], 0x99
0x36ba:	mov rax, qword ptr [rbp - 0x18]
0x36be:	mov byte ptr [rax + 0x35], 0x48
0x36c2:	mov rax, qword ptr [rbp - 0x18]
0x36c6:	mov byte ptr [rax + 0x36], 0xbb
0x36ca:	mov rax, qword ptr [rbp - 0x18]
0x36ce:	mov byte ptr [rax + 0x37], 0x2f
0x36d2:	mov rax, qword ptr [rbp - 0x18]
0x36d6:	mov byte ptr [rax + 0x38], 0x62
0x36da:	mov rax, qword ptr [rbp - 0x18]
0x36de:	mov byte ptr [rax + 0x39], 0x69
0x36e2:	mov rax, qword ptr [rbp - 0x18]
0x36e6:	mov byte ptr [rax + 0x3a], 0x6e
0x36ea:	mov rax, qword ptr [rbp - 0x18]
0x36ee:	mov byte ptr [rax + 0x3b], 0x2f
0x36f2:	mov rax, qword ptr [rbp - 0x18]
0x36f6:	mov byte ptr [rax + 0x3c], 0x73
0x36fa:	mov rax, qword ptr [rbp - 0x18]
0x36fe:	mov byte ptr [rax + 0x3d], 0x68
0x3702:	mov rax, qword ptr [rbp - 0x18]
0x3706:	mov byte ptr [rax + 0x3f], 0x53
0x370a:	mov rax, qword ptr [rbp - 0x18]
0x370e:	mov byte ptr [rax + 0x40], 0x48
0x3712:	mov rax, qword ptr [rbp - 0x18]
0x3716:	mov byte ptr [rax + 0x41], 0x89
0x371a:	mov rax, qword ptr [rbp - 0x18]
0x371e:	mov byte ptr [rax + 0x42], 0xe7
0x3722:	mov rax, qword ptr [rbp - 0x18]
0x3726:	mov byte ptr [rax + 0x43], 0x52
0x372a:	mov rax, qword ptr [rbp - 0x18]
0x372e:	mov byte ptr [rax + 0x44], 0x57
0x3732:	mov rax, qword ptr [rbp - 0x18]
0x3736:	mov byte ptr [rax + 0x45], 0x48
0x373a:	mov rax, qword ptr [rbp - 0x18]
0x373e:	mov byte ptr [rax + 0x46], 0x89
0x3742:	mov rax, qword ptr [rbp - 0x18]
0x3746:	mov byte ptr [rax + 0x47], 0xe6
0x374a:	mov rax, qword ptr [rbp - 0x18]
0x374e:	mov byte ptr [rax + 0x48], 0xf
0x3752:	mov rax, qword ptr [rbp - 0x18]
0x3756:	mov byte ptr [rax + 0x49], 5
0x375a:	mov edi, 0x15b3
0x375f:	call 0x1240
0x3764:	mov edx, eax
0x3766:	mov rax, qword ptr [rbp - 0x18]
0x376a:	mov word ptr [rax + 0x12], dx
0x376e:	mov rax, qword ptr [rbp - 0x18]
0x3772:	add rax, 0x14
0x3776:	mov rsi, rax
0x3779:	lea rdi, qword ptr [rip + 0xa2c]
0x3780:	call 0x12c8
0x3785:	test eax, eax
0x3787:	jne 0x37a8
0x3789:	lea rcx, qword ptr [rip + 0xa90]
0x3790:	mov edx, 0x36
0x3795:	lea rsi, qword ptr [rip + 0xa1a]
0x379c:	lea rdi, qword ptr [rip + 0xa23]
0x37a3:	call 0x1250
0x37a8:	nop 
0x37a9:	mov rax, qword ptr [rbp - 8]
0x37ad:	xor rax, qword ptr fs:[0x28]
0x37b6:	je 0x37bd
0x37b8:	call 0x1230
0x37bd:	leave 
0x37be:	ret 
0x37bf:	push rbp
0x37c0:	mov rbp, rsp
0x37c3:	sub rsp, 0x150
0x37ca:	mov qword ptr [rbp - 0x138], rdi
0x37d1:	mov qword ptr [rbp - 0x140], rsi
0x37d8:	mov qword ptr [rbp - 0x148], rdx
0x37df:	mov rax, qword ptr fs:[0x28]
0x37e8:	mov qword ptr [rbp - 8], rax
0x37ec:	xor eax, eax
0x37ee:	mov dword ptr [rbp - 0x124], 0
0x37f8:	lea rdi, qword ptr [rbp - 0x124]
0x37ff:	lea rsi, qword ptr [rbp - 0x126]
0x3806:	lea rcx, qword ptr [rbp - 0x124]
0x380d:	lea rdx, qword ptr [rbp - 0x110]
0x3814:	mov rax, qword ptr [rbp - 0x140]
0x381b:	mov r9, rdi
0x381e:	mov r8, rsi
0x3821:	lea rsi, qword ptr [rip + 0x9a0]
0x3828:	mov rdi, rax
0x382b:	mov eax, 0
0x3830:	call 0x12e0
0x3835:	mov dword ptr [rbp - 0x11c], eax
0x383b:	cmp dword ptr [rbp - 0x11c], 0
0x3842:	js 0x384d
0x3844:	cmp dword ptr [rbp - 0x11c], 2
0x384b:	jle 0x386c
0x384d:	lea rcx, qword ptr [rip + 0x9e4]
0x3854:	mov edx, 0x3d
0x3859:	lea rsi, qword ptr [rip + 0x956]
0x3860:	lea rdi, qword ptr [rip + 0x978]
0x3867:	call 0x1250
0x386c:	cmp dword ptr [rbp - 0x11c], 1
0x3873:	jle 0x3881
0x3875:	movzx eax, word ptr [rbp - 0x126]
0x387c:	movzx eax, ax
0x387f:	jmp 0x3886
0x3881:	mov eax, 0x15b3
0x3886:	mov edi, eax
0x3888:	call 0x1240
0x388d:	mov edx, eax
0x388f:	mov rax, qword ptr [rbp - 0x138]
0x3896:	mov word ptr [rax + 0x12], dx
0x389a:	mov rax, qword ptr [rbp - 0x138]
0x38a1:	lea rdx, qword ptr [rax + 0x14]
0x38a5:	lea rax, qword ptr [rbp - 0x110]
0x38ac:	mov rsi, rdx
0x38af:	mov rdi, rax
0x38b2:	call 0x12c8
0x38b7:	test eax, eax
0x38b9:	jne 0x394c
0x38bf:	lea rax, qword ptr [rbp - 0x110]
0x38c6:	mov rdi, rax
0x38c9:	call 0x12a0
0x38ce:	mov qword ptr [rbp - 0x118], rax
0x38d5:	jmp 0x3942
0x38d7:	mov dword ptr [rbp - 0x120], 0
0x38e1:	jmp 0x3914
0x38e3:	mov rax, qword ptr [rbp - 0x118]
0x38ea:	mov rax, qword ptr [rax + 0x18]
0x38ee:	mov edx, dword ptr [rbp - 0x120]
0x38f4:	movsxd rdx, edx
0x38f7:	shl rdx, 3
0x38fb:	add rax, rdx
0x38fe:	mov rdx, qword ptr [rax]
0x3901:	mov rax, qword ptr [rbp - 0x138]
0x3908:	mov edx, dword ptr [rdx]
0x390a:	mov dword ptr [rax + 0x14], edx
0x390d:	add dword ptr [rbp - 0x120], 1
0x3914:	mov rax, qword ptr [rbp - 0x118]
0x391b:	mov rax, qword ptr [rax + 0x18]
0x391f:	mov edx, dword ptr [rbp - 0x120]
0x3925:	movsxd rdx, edx
0x3928:	shl rdx, 3
0x392c:	add rax, rdx
0x392f:	mov rax, qword ptr [rax]
0x3932:	test rax, rax
0x3935:	jne 0x38e3
0x3937:	mov qword ptr [rbp - 0x118], 0
0x3942:	cmp qword ptr [rbp - 0x118], 0
0x394a:	jne 0x38d7
0x394c:	mov eax, dword ptr [rbp - 0x124]
0x3952:	cdqe 
0x3954:	mov rcx, qword ptr [rbp - 8]
0x3958:	xor rcx, qword ptr fs:[0x28]
0x3961:	je 0x3968
0x3963:	call 0x1230
0x3968:	leave 
0x3969:	ret 
0x396a:	push rbp
0x396b:	mov rbp, rsp
0x396e:	sub rsp, 0x20
0x3972:	mov qword ptr [rbp - 0x18], rdi
0x3976:	mov rax, qword ptr fs:[0x28]
0x397f:	mov qword ptr [rbp - 8], rax
0x3983:	xor eax, eax
0x3985:	mov rax, qword ptr [rbp - 0x18]
0x3989:	movzx eax, word ptr [rax + 0x12]
0x398d:	movzx eax, ax
0x3990:	mov edi, eax
0x3992:	call 0x12f0
0x3997:	movzx edx, ax
0x399a:	mov rax, qword ptr [rip + 0x201657]
0x39a1:	mov rax, qword ptr [rax]
0x39a4:	mov ecx, edx
0x39a6:	lea rdx, qword ptr [rip + 0x845]
0x39ad:	lea rsi, qword ptr [rip + 0x848]
0x39b4:	mov rdi, rax
0x39b7:	mov eax, 0
0x39bc:	call 0x12a8
0x39c1:	mov rax, qword ptr [rbp - 0x18]
0x39c5:	mov eax, dword ptr [rax + 0x14]
0x39c8:	mov edi, eax
0x39ca:	call 0x1208
0x39cf:	mov rdx, rax
0x39d2:	mov rax, qword ptr [rip + 0x20161f]
0x39d9:	mov rax, qword ptr [rax]
0x39dc:	mov rcx, rdx
0x39df:	lea rdx, qword ptr [rip + 0x820]
0x39e6:	lea rsi, qword ptr [rip + 0x828]
0x39ed:	mov rdi, rax
0x39f0:	mov eax, 0
0x39f5:	call 0x12a8
0x39fa:	nop 
0x39fb:	mov rax, qword ptr [rbp - 8]
0x39ff:	xor rax, qword ptr fs:[0x28]
0x3a08:	je 0x3a0f
0x3a0a:	call 0x1230
0x3a0f:	leave 
0x3a10:	ret 
0x3a11:	push rbp
0x3a12:	mov rbp, rsp
0x3a15:	sub rsp, 0x30
0x3a19:	mov qword ptr [rbp - 0x18], rdi
0x3a1d:	mov qword ptr [rbp - 0x20], rsi
0x3a21:	mov qword ptr [rbp - 0x28], rdx
0x3a25:	mov rax, qword ptr fs:[0x28]
0x3a2e:	mov qword ptr [rbp - 8], rax
0x3a32:	xor eax, eax
0x3a34:	mov rax, qword ptr [rbp - 0x20]
0x3a38:	mov rdi, rax
0x3a3b:	call 0x1228
0x3a40:	mov qword ptr [rbp - 0x10], rax
0x3a44:	cmp qword ptr [rbp - 0x10], 0
0x3a49:	jne 0x3a7c
0x3a4b:	mov rax, qword ptr [rbp - 0x18]
0x3a4f:	jmp 0x3a8b
0x3a51:	sub qword ptr [rbp - 0x28], 1
0x3a56:	mov rdx, qword ptr [rbp - 0x10]
0x3a5a:	mov rcx, qword ptr [rbp - 0x20]
0x3a5e:	mov rax, qword ptr [rbp - 0x18]
0x3a62:	mov rsi, rcx
0x3a65:	mov rdi, rax
0x3a68:	call 0x1280
0x3a6d:	test eax, eax
0x3a6f:	jne 0x3a77
0x3a71:	mov rax, qword ptr [rbp - 0x18]
0x3a75:	jmp 0x3a8b
0x3a77:	add qword ptr [rbp - 0x18], 1
0x3a7c:	mov rax, qword ptr [rbp - 0x28]
0x3a80:	cmp rax, qword ptr [rbp - 0x10]
0x3a84:	jae 0x3a51
0x3a86:	mov eax, 0
0x3a8b:	mov rcx, qword ptr [rbp - 8]
0x3a8f:	xor rcx, qword ptr fs:[0x28]
0x3a98:	je 0x3a9f
0x3a9a:	call 0x1230
0x3a9f:	leave 
0x3aa0:	ret 